;;
;; This file was generated by the Retargetable Decompiler
;; Website: https://retdec.com
;;
;; Decompilation date: 2023-09-19 11:08:39
;; Architecture: x86
;;

;;
;; Code Segment
;;

; section: .init
; function: _init at 0x1000 -- 0x101b
0x1000:   f3 0f 1e fa                     	endbr64 
0x1004:   48 83 ec 08                     	sub rsp, 8
0x1008:   48 8b 05 d9 3f 00 00            	mov rax, qword ptr [rip + 0x3fd9]
0x100f:   48 85 c0                        	test rax, rax
0x1012:   74 02                           	je 0x1016 <_init+0x16>
0x1014:   ff d0                           	call rax <__gmon_start__>
0x1016:   48 83 c4 08                     	add rsp, 8
0x101a:   c3                              	ret 
; section: .plt
; data inside code section at 0x1020 -- 0x1030
0x1020:   ff 35 da 3e 00 00 ff 25  dc 3e 00 00 0f 1f 40 00   |.5.>...%.>....@.|
; function: function_1030 at 0x1030 -- 0x1036
0x1030:   ff 25 da 3e 00 00               	jmp qword ptr [rip + 0x3eda] <getenv>
; data inside code section at 0x1036 -- 0x1040
0x1036:   68 00 00 00 00 e9 e0 ff  ff ff                     |h.........      |
; function: function_1040 at 0x1040 -- 0x1046
0x1040:   ff 25 d2 3e 00 00               	jmp qword ptr [rip + 0x3ed2] <__errno_location>
; data inside code section at 0x1046 -- 0x1050
0x1046:   68 01 00 00 00 e9 d0 ff  ff ff                     |h.........      |
; function: function_1050 at 0x1050 -- 0x1056
0x1050:   ff 25 ca 3e 00 00               	jmp qword ptr [rip + 0x3eca] <strcpy>
; data inside code section at 0x1056 -- 0x1060
0x1056:   68 02 00 00 00 e9 c0 ff  ff ff                     |h.........      |
; function: function_1060 at 0x1060 -- 0x1066
0x1060:   ff 25 c2 3e 00 00               	jmp qword ptr [rip + 0x3ec2] <puts>
; data inside code section at 0x1066 -- 0x1070
0x1066:   68 03 00 00 00 e9 b0 ff  ff ff                     |h.........      |
; function: function_1070 at 0x1070 -- 0x1076
0x1070:   ff 25 ba 3e 00 00               	jmp qword ptr [rip + 0x3eba] <write>
; data inside code section at 0x1076 -- 0x1080
0x1076:   68 04 00 00 00 e9 a0 ff  ff ff                     |h.........      |
; function: function_1080 at 0x1080 -- 0x1086
0x1080:   ff 25 b2 3e 00 00               	jmp qword ptr [rip + 0x3eb2] <__stack_chk_fail>
; data inside code section at 0x1086 -- 0x1090
0x1086:   68 05 00 00 00 e9 90 ff  ff ff                     |h.........      |
; function: function_1090 at 0x1090 -- 0x1096
0x1090:   ff 25 aa 3e 00 00               	jmp qword ptr [rip + 0x3eaa] <alarm>
; data inside code section at 0x1096 -- 0x10a0
0x1096:   68 06 00 00 00 e9 80 ff  ff ff                     |h.........      |
; function: function_10a0 at 0x10a0 -- 0x10a6
0x10a0:   ff 25 a2 3e 00 00               	jmp qword ptr [rip + 0x3ea2] <close>
; data inside code section at 0x10a6 -- 0x10b0
0x10a6:   68 07 00 00 00 e9 70 ff  ff ff                     |h.....p...      |
; function: function_10b0 at 0x10b0 -- 0x10b6
0x10b0:   ff 25 9a 3e 00 00               	jmp qword ptr [rip + 0x3e9a] <read>
; data inside code section at 0x10b6 -- 0x10c0
0x10b6:   68 08 00 00 00 e9 60 ff  ff ff                     |h.....`...      |
; function: function_10c0 at 0x10c0 -- 0x10c6
0x10c0:   ff 25 92 3e 00 00               	jmp qword ptr [rip + 0x3e92] <fgets>
; data inside code section at 0x10c6 -- 0x10d0
0x10c6:   68 09 00 00 00 e9 50 ff  ff ff                     |h.....P...      |
; function: function_10d0 at 0x10d0 -- 0x10d6
0x10d0:   ff 25 8a 3e 00 00               	jmp qword ptr [rip + 0x3e8a] <signal>
; data inside code section at 0x10d6 -- 0x10e0
0x10d6:   68 0a 00 00 00 e9 40 ff  ff ff                     |h.....@...      |
; function: function_10e0 at 0x10e0 -- 0x10e6
0x10e0:   ff 25 82 3e 00 00               	jmp qword ptr [rip + 0x3e82] <gethostbyname>
; data inside code section at 0x10e6 -- 0x10f0
0x10e6:   68 0b 00 00 00 e9 30 ff  ff ff                     |h.....0...      |
; function: function_10f0 at 0x10f0 -- 0x10f6
0x10f0:   ff 25 7a 3e 00 00               	jmp qword ptr [rip + 0x3e7a] <__memmove_chk>
; data inside code section at 0x10f6 -- 0x1100
0x10f6:   68 0c 00 00 00 e9 20 ff  ff ff                     |h..... ...      |
; function: function_1100 at 0x1100 -- 0x1106
0x1100:   ff 25 72 3e 00 00               	jmp qword ptr [rip + 0x3e72] <strtol>
; data inside code section at 0x1106 -- 0x1110
0x1106:   68 0d 00 00 00 e9 10 ff  ff ff                     |h.........      |
; function: function_1110 at 0x1110 -- 0x1116
0x1110:   ff 25 6a 3e 00 00               	jmp qword ptr [rip + 0x3e6a] <fflush>
; data inside code section at 0x1116 -- 0x1120
0x1116:   68 0e 00 00 00 e9 00 ff  ff ff                     |h.........      |
; function: function_1120 at 0x1120 -- 0x1126
0x1120:   ff 25 62 3e 00 00               	jmp qword ptr [rip + 0x3e62] <sscanf>
; data inside code section at 0x1126 -- 0x1130
0x1126:   68 0f 00 00 00 e9 f0 fe  ff ff                     |h.........      |
; function: function_1130 at 0x1130 -- 0x1136
0x1130:   ff 25 5a 3e 00 00               	jmp qword ptr [rip + 0x3e5a] <__printf_chk>
; data inside code section at 0x1136 -- 0x1140
0x1136:   68 10 00 00 00 e9 e0 fe  ff ff                     |h.........      |
; function: function_1140 at 0x1140 -- 0x1146
0x1140:   ff 25 52 3e 00 00               	jmp qword ptr [rip + 0x3e52] <fopen>
; data inside code section at 0x1146 -- 0x1150
0x1146:   68 11 00 00 00 e9 d0 fe  ff ff                     |h.........      |
; function: function_1150 at 0x1150 -- 0x1156
0x1150:   ff 25 4a 3e 00 00               	jmp qword ptr [rip + 0x3e4a] <exit>
; data inside code section at 0x1156 -- 0x1160
0x1156:   68 12 00 00 00 e9 c0 fe  ff ff                     |h.........      |
; function: function_1160 at 0x1160 -- 0x1166
0x1160:   ff 25 42 3e 00 00               	jmp qword ptr [rip + 0x3e42] <connect>
; data inside code section at 0x1166 -- 0x1170
0x1166:   68 13 00 00 00 e9 b0 fe  ff ff                     |h.........      |
; function: function_1170 at 0x1170 -- 0x1176
0x1170:   ff 25 3a 3e 00 00               	jmp qword ptr [rip + 0x3e3a] <__fprintf_chk>
; data inside code section at 0x1176 -- 0x1180
0x1176:   68 14 00 00 00 e9 a0 fe  ff ff                     |h.........      |
; function: function_1180 at 0x1180 -- 0x1186
0x1180:   ff 25 32 3e 00 00               	jmp qword ptr [rip + 0x3e32] <sleep>
; data inside code section at 0x1186 -- 0x1190
0x1186:   68 15 00 00 00 e9 90 fe  ff ff                     |h.........      |
; function: function_1190 at 0x1190 -- 0x1196
0x1190:   ff 25 2a 3e 00 00               	jmp qword ptr [rip + 0x3e2a] <__ctype_b_loc>
; data inside code section at 0x1196 -- 0x11a0
0x1196:   68 16 00 00 00 e9 80 fe  ff ff                     |h.........      |
; function: function_11a0 at 0x11a0 -- 0x11a6
0x11a0:   ff 25 22 3e 00 00               	jmp qword ptr [rip + 0x3e22] <__sprintf_chk>
; data inside code section at 0x11a6 -- 0x11b0
0x11a6:   68 17 00 00 00 e9 70 fe  ff ff                     |h.....p...      |
; function: function_11b0 at 0x11b0 -- 0x11b6
0x11b0:   ff 25 1a 3e 00 00               	jmp qword ptr [rip + 0x3e1a] <socket>
; data inside code section at 0x11b6 -- 0x11c0
0x11b6:   68 18 00 00 00 e9 60 fe  ff ff                     |h.....`...      |
; section: .plt.got
; function: function_11c0 at 0x11c0 -- 0x11c6
0x11c0:   ff 25 32 3e 00 00               	jmp qword ptr [rip + 0x3e32] <__cxa_finalize>
; data inside code section at 0x11c6 -- 0x11c8
0x11c6:   66 90                                              |f.              |
; section: .text
; function: _start at 0x11d0 -- 0x11ff
0x11d0:   f3 0f 1e fa                     	endbr64 
0x11d4:   31 ed                           	xor ebp, ebp
0x11d6:   49 89 d1                        	mov r9, rdx
0x11d9:   5e                              	pop rsi
0x11da:   48 89 e2                        	mov rdx, rsp
0x11dd:   48 83 e4 f0                     	and rsp, 0xfffffffffffffff0
0x11e1:   50                              	push rax
0x11e2:   54                              	push rsp
0x11e3:   4c 8d 05 b6 19 00 00            	lea r8, [rip + 0x19b6]
0x11ea:   48 8d 0d 3f 19 00 00            	lea rcx, [rip + 0x193f]
0x11f1:   48 8d 3d e2 00 00 00            	lea rdi, [rip + 0xe2]
0x11f8:   ff 15 e2 3d 00 00               	call qword ptr [rip + 0x3de2] <__libc_start_main>
0x11fe:   f4                              	hlt 
; data inside code section at 0x11ff -- 0x1200
0x11ff:   90                                                 |.               |
; function: deregister_tm_clones at 0x1200 -- 0x1232
0x1200:   48 8d 3d 79 44 00 00            	lea rdi, [rip + 0x4479]
0x1207:   55                              	push rbp
0x1208:   48 8d 05 71 44 00 00            	lea rax, [rip + 0x4471]
0x120f:   48 39 f8                        	cmp rax, rdi
0x1212:   48 89 e5                        	mov rbp, rsp
0x1215:   74 19                           	je 0x1230 <deregister_tm_clones+0x30>
0x1217:   48 8b 05 ba 3d 00 00            	mov rax, qword ptr [rip + 0x3dba]
0x121e:   48 85 c0                        	test rax, rax
0x1221:   74 0d                           	je 0x1230 <deregister_tm_clones+0x30>
0x1223:   5d                              	pop rbp
0x1224:   ff e0                           	jmp rax <_ITM_deregisterTMCloneTable>
; data inside code section at 0x1226 -- 0x1230
0x1226:   66 2e 0f 1f 84 00 00 00  00 00                     |f.........      |
0x1230:   5d                              	pop rbp
0x1231:   c3                              	ret 
; data inside code section at 0x1232 -- 0x1240
0x1232:   66 66 2e 0f 1f 84 00 00  00 00 00 0f 1f 00         |ff............  |
; function: register_tm_clones at 0x1240 -- 0x1282
0x1240:   48 8d 3d 39 44 00 00            	lea rdi, [rip + 0x4439]
0x1247:   48 8d 35 32 44 00 00            	lea rsi, [rip + 0x4432]
0x124e:   55                              	push rbp
0x124f:   48 29 fe                        	sub rsi, rdi
0x1252:   48 89 e5                        	mov rbp, rsp
0x1255:   48 c1 fe 03                     	sar rsi, 3
0x1259:   48 89 f0                        	mov rax, rsi
0x125c:   48 c1 e8 3f                     	shr rax, 0x3f
0x1260:   48 01 c6                        	add rsi, rax
0x1263:   48 d1 fe                        	sar rsi, 1
0x1266:   74 18                           	je 0x1280 <register_tm_clones+0x40>
0x1268:   48 8b 05 81 3d 00 00            	mov rax, qword ptr [rip + 0x3d81]
0x126f:   48 85 c0                        	test rax, rax
0x1272:   74 0c                           	je 0x1280 <register_tm_clones+0x40>
0x1274:   5d                              	pop rbp
0x1275:   ff e0                           	jmp rax <_ITM_registerTMCloneTable>
; data inside code section at 0x1277 -- 0x1280
0x1277:   66 0f 1f 84 00 00 00 00  00                        |f........       |
0x1280:   5d                              	pop rbp
0x1281:   c3                              	ret 
; data inside code section at 0x1282 -- 0x1290
0x1282:   66 66 2e 0f 1f 84 00 00  00 00 00 0f 1f 00         |ff............  |
; function: __do_global_dtors_aux at 0x1290 -- 0x12ca
0x1290:   80 3d 11 44 00 00 00            	cmp byte ptr [rip + 0x4411], 0
0x1297:   75 2f                           	jne 0x12c8 <__do_global_dtors_aux+0x38>
0x1299:   48 83 3d 57 3d 00 00 00         	cmp qword ptr [rip + 0x3d57], 0
0x12a1:   55                              	push rbp
0x12a2:   48 89 e5                        	mov rbp, rsp
0x12a5:   74 0c                           	je 0x12b3 <__do_global_dtors_aux+0x23>
0x12a7:   48 8b 3d 5a 3d 00 00            	mov rdi, qword ptr [rip + 0x3d5a]
0x12ae:   e8 0d ff ff ff                  	call 0x11c0 <__cxa_finalize>
0x12b3:   e8 48 ff ff ff                  	call 0x1200 <deregister_tm_clones>
0x12b8:   c6 05 e9 43 00 00 01            	mov byte ptr [rip + 0x43e9], 1
0x12bf:   5d                              	pop rbp
0x12c0:   c3                              	ret 
; data inside code section at 0x12c1 -- 0x12c8
0x12c1:   0f 1f 80 00 00 00 00                               |.......         |
0x12c8:   f3 c3                           	ret 
; data inside code section at 0x12ca -- 0x12d0
0x12ca:   66 0f 1f 44 00 00                                  |f..D..          |
; function: frame_dummy at 0x12d0 -- 0x12da
0x12d0:   55                              	push rbp
0x12d1:   48 89 e5                        	mov rbp, rsp
0x12d4:   5d                              	pop rbp
0x12d5:   e9 66 ff ff ff                  	jmp 0x1240 <register_tm_clones>
; function: main at 0x12da -- 0x1434
0x12da:   53                              	push rbx
0x12db:   83 ff 01                        	cmp edi, 1
0x12de:   0f 84 f8 00 00 00               	je 0x13dc <main+0x102>
0x12e4:   48 89 f3                        	mov rbx, rsi
0x12e7:   83 ff 02                        	cmp edi, 2
0x12ea:   0f 85 21 01 00 00               	jne 0x1411 <main+0x137>
0x12f0:   48 8b 7e 08                     	mov rdi, qword ptr [rsi + 8]
0x12f4:   48 8d 35 09 1d 00 00            	lea rsi, [rip + 0x1d09]
0x12fb:   e8 40 fe ff ff                  	call 0x1140 <fopen>
0x1300:   48 89 05 a9 43 00 00            	mov qword ptr [rip + 0x43a9], rax
0x1307:   48 85 c0                        	test rax, rax
0x130a:   0f 84 df 00 00 00               	je 0x13ef <main+0x115>
0x1310:   e8 6b 06 00 00                  	call 0x1980 <initialize_bomb>
0x1315:   48 8d 3d 6c 1d 00 00            	lea rdi, [rip + 0x1d6c]
0x131c:   e8 3f fd ff ff                  	call 0x1060 <puts>
0x1321:   48 8d 3d a0 1d 00 00            	lea rdi, [rip + 0x1da0]
0x1328:   e8 33 fd ff ff                  	call 0x1060 <puts>
0x132d:   e8 21 09 00 00                  	call 0x1c53 <read_line>
0x1332:   48 89 c7                        	mov rdi, rax
0x1335:   e8 fa 00 00 00                  	call 0x1434 <phase_1>
0x133a:   e8 71 0a 00 00                  	call 0x1db0 <phase_defused>
0x133f:   48 8d 3d b2 1d 00 00            	lea rdi, [rip + 0x1db2]
0x1346:   e8 15 fd ff ff                  	call 0x1060 <puts>
0x134b:   e8 03 09 00 00                  	call 0x1c53 <read_line>
0x1350:   48 89 c7                        	mov rdi, rax
0x1353:   e8 fc 00 00 00                  	call 0x1454 <phase_2>
0x1358:   e8 53 0a 00 00                  	call 0x1db0 <phase_defused>
0x135d:   48 8d 3d d9 1c 00 00            	lea rdi, [rip + 0x1cd9]
0x1364:   e8 f7 fc ff ff                  	call 0x1060 <puts>
0x1369:   e8 e5 08 00 00                  	call 0x1c53 <read_line>
0x136e:   48 89 c7                        	mov rdi, rax
0x1371:   e8 4d 01 00 00                  	call 0x14c3 <phase_3>
0x1376:   e8 35 0a 00 00                  	call 0x1db0 <phase_defused>
0x137b:   48 8d 3d d9 1c 00 00            	lea rdi, [rip + 0x1cd9]
0x1382:   e8 d9 fc ff ff                  	call 0x1060 <puts>
0x1387:   e8 c7 08 00 00                  	call 0x1c53 <read_line>
0x138c:   48 89 c7                        	mov rdi, rax
0x138f:   e8 4d 02 00 00                  	call 0x15e1 <phase_4>
0x1394:   e8 17 0a 00 00                  	call 0x1db0 <phase_defused>
0x1399:   48 8d 3d 88 1d 00 00            	lea rdi, [rip + 0x1d88]
0x13a0:   e8 bb fc ff ff                  	call 0x1060 <puts>
0x13a5:   e8 a9 08 00 00                  	call 0x1c53 <read_line>
0x13aa:   48 89 c7                        	mov rdi, rax
0x13ad:   e8 a4 02 00 00                  	call 0x1656 <phase_5>
0x13b2:   e8 f9 09 00 00                  	call 0x1db0 <phase_defused>
0x13b7:   48 8d 3d ac 1c 00 00            	lea rdi, [rip + 0x1cac]
0x13be:   e8 9d fc ff ff                  	call 0x1060 <puts>
0x13c3:   e8 8b 08 00 00                  	call 0x1c53 <read_line>
0x13c8:   48 89 c7                        	mov rdi, rax
0x13cb:   e8 cc 02 00 00                  	call 0x169c <phase_6>
0x13d0:   e8 db 09 00 00                  	call 0x1db0 <phase_defused>
0x13d5:   b8 00 00 00 00                  	mov eax, 0
0x13da:   5b                              	pop rbx
0x13db:   c3                              	ret 
0x13dc:   48 8b 05 ad 42 00 00            	mov rax, qword ptr [rip + 0x42ad]
0x13e3:   48 89 05 c6 42 00 00            	mov qword ptr [rip + 0x42c6], rax
0x13ea:   e9 21 ff ff ff                  	jmp 0x1310 <main+0x36>
0x13ef:   48 8b 4b 08                     	mov rcx, qword ptr [rbx + 8]
0x13f3:   48 8b 13                        	mov rdx, qword ptr [rbx]
0x13f6:   48 8d 35 09 1c 00 00            	lea rsi, [rip + 0x1c09]
0x13fd:   bf 01 00 00 00                  	mov edi, 1
0x1402:   e8 29 fd ff ff                  	call 0x1130 <__printf_chk>
0x1407:   bf 08 00 00 00                  	mov edi, 8
0x140c:   e8 3f fd ff ff                  	call 0x1150 <exit>
0x1411:   48 8b 16                        	mov rdx, qword ptr [rsi]
0x1414:   48 8d 35 08 1c 00 00            	lea rsi, [rip + 0x1c08]
0x141b:   bf 01 00 00 00                  	mov edi, 1
0x1420:   b8 00 00 00 00                  	mov eax, 0
0x1425:   e8 06 fd ff ff                  	call 0x1130 <__printf_chk>
0x142a:   bf 08 00 00 00                  	mov edi, 8
0x142f:   e8 1c fd ff ff                  	call 0x1150 <exit>
; function: phase_1 at 0x1434 -- 0x1454
0x1434:   48 83 ec 08                     	sub rsp, 8
0x1438:   48 8d 35 11 1d 00 00            	lea rsi, [rip + 0x1d11]
0x143f:   e8 d5 04 00 00                  	call 0x1919 <strings_not_equal>
0x1444:   85 c0                           	test eax, eax
0x1446:   75 05                           	jne 0x144d <phase_1+0x19>
0x1448:   48 83 c4 08                     	add rsp, 8
0x144c:   c3                              	ret 
0x144d:   e8 84 07 00 00                  	call 0x1bd6 <explode_bomb>
0x1452:   eb f4                           	jmp 0x1448 <phase_1+0x14>
; function: phase_2 at 0x1454 -- 0x14c3
0x1454:   55                              	push rbp
0x1455:   53                              	push rbx
0x1456:   48 83 ec 28                     	sub rsp, 0x28
0x145a:   64 48 8b 04 25 28 00 00 00      	mov rax, qword ptr fs:[0x28]
0x1463:   48 89 44 24 18                  	mov qword ptr [rsp + 0x18], rax
0x1468:   31 c0                           	xor eax, eax
0x146a:   48 89 e6                        	mov rsi, rsp
0x146d:   e8 a0 07 00 00                  	call 0x1c12 <read_six_numbers>
0x1472:   83 3c 24 00                     	cmp dword ptr [rsp], 0
0x1476:   75 07                           	jne 0x147f <phase_2+0x2b>
0x1478:   83 7c 24 04 01                  	cmp dword ptr [rsp + 4], 1
0x147d:   74 05                           	je 0x1484 <phase_2+0x30>
0x147f:   e8 52 07 00 00                  	call 0x1bd6 <explode_bomb>
0x1484:   48 89 e3                        	mov rbx, rsp
0x1487:   48 8d 6b 10                     	lea rbp, [rbx + 0x10]
0x148b:   eb 09                           	jmp 0x1496 <phase_2+0x42>
0x148d:   48 83 c3 04                     	add rbx, 4
0x1491:   48 39 eb                        	cmp rbx, rbp
0x1494:   74 11                           	je 0x14a7 <phase_2+0x53>
0x1496:   8b 43 04                        	mov eax, dword ptr [rbx + 4]
0x1499:   03 03                           	add eax, dword ptr [rbx]
0x149b:   39 43 08                        	cmp dword ptr [rbx + 8], eax
0x149e:   74 ed                           	je 0x148d <phase_2+0x39>
0x14a0:   e8 31 07 00 00                  	call 0x1bd6 <explode_bomb>
0x14a5:   eb e6                           	jmp 0x148d <phase_2+0x39>
0x14a7:   48 8b 44 24 18                  	mov rax, qword ptr [rsp + 0x18]
0x14ac:   64 48 33 04 25 28 00 00 00      	xor rax, qword ptr fs:[0x28]
0x14b5:   75 07                           	jne 0x14be <phase_2+0x6a>
0x14b7:   48 83 c4 28                     	add rsp, 0x28
0x14bb:   5b                              	pop rbx
0x14bc:   5d                              	pop rbp
0x14bd:   c3                              	ret 
0x14be:   e8 bd fb ff ff                  	call 0x1080 <__stack_chk_fail>
; function: phase_3 at 0x14c3 -- 0x15a2
0x14c3:   48 83 ec 18                     	sub rsp, 0x18
0x14c7:   64 48 8b 04 25 28 00 00 00      	mov rax, qword ptr fs:[0x28]
0x14d0:   48 89 44 24 08                  	mov qword ptr [rsp + 8], rax
0x14d5:   31 c0                           	xor eax, eax
0x14d7:   48 8d 4c 24 04                  	lea rcx, [rsp + 4]
0x14dc:   48 89 e2                        	mov rdx, rsp
0x14df:   48 8d 35 17 1f 00 00            	lea rsi, [rip + 0x1f17]
0x14e6:   e8 35 fc ff ff                  	call 0x1120 <sscanf>
0x14eb:   83 f8 01                        	cmp eax, 1
0x14ee:   7e 1d                           	jle 0x150d <phase_3+0x4a>
0x14f0:   83 3c 24 07                     	cmp dword ptr [rsp], 7
0x14f4:   0f 87 97 00 00 00               	ja 0x1591 <phase_3+0xce>
0x14fa:   8b 04 24                        	mov eax, dword ptr [rsp]
0x14fd:   48 8d 15 9c 1c 00 00            	lea rdx, [rip + 0x1c9c]
0x1504:   48 63 04 82                     	movsxd rax, dword ptr [rdx + rax*4]
0x1508:   48 01 d0                        	add rax, rdx
0x150b:   ff e0                           	jmp rax
0x150d:   e8 c4 06 00 00                  	call 0x1bd6 <explode_bomb>
0x1512:   eb dc                           	jmp 0x14f0 <phase_3+0x2d>
0x1514:   b8 3c 03 00 00                  	mov eax, 0x33c
0x1519:   eb 05                           	jmp 0x1520 <phase_3+0x5d>
0x151b:   b8 00 00 00 00                  	mov eax, 0
0x1520:   2d db 01 00 00                  	sub eax, 0x1db
0x1525:   83 c0 43                        	add eax, 0x43
0x1528:   2d 2a 02 00 00                  	sub eax, 0x22a
0x152d:   05 2a 02 00 00                  	add eax, 0x22a
0x1532:   2d 2a 02 00 00                  	sub eax, 0x22a
0x1537:   05 2a 02 00 00                  	add eax, 0x22a
0x153c:   2d 2a 02 00 00                  	sub eax, 0x22a
0x1541:   83 3c 24 05                     	cmp dword ptr [rsp], 5
0x1545:   7f 06                           	jg 0x154d <phase_3+0x8a>
0x1547:   39 44 24 04                     	cmp dword ptr [rsp + 4], eax
0x154b:   74 05                           	je 0x1552 <phase_3+0x8f>
0x154d:   e8 84 06 00 00                  	call 0x1bd6 <explode_bomb>
0x1552:   48 8b 44 24 08                  	mov rax, qword ptr [rsp + 8]
0x1557:   64 48 33 04 25 28 00 00 00      	xor rax, qword ptr fs:[0x28]
0x1560:   75 3b                           	jne 0x159d <phase_3+0xda>
0x1562:   48 83 c4 18                     	add rsp, 0x18
0x1566:   c3                              	ret 
0x1567:   b8 00 00 00 00                  	mov eax, 0
0x156c:   eb b7                           	jmp 0x1525 <phase_3+0x62>
0x156e:   b8 00 00 00 00                  	mov eax, 0
0x1573:   eb b3                           	jmp 0x1528 <phase_3+0x65>
0x1575:   b8 00 00 00 00                  	mov eax, 0
0x157a:   eb b1                           	jmp 0x152d <phase_3+0x6a>
0x157c:   b8 00 00 00 00                  	mov eax, 0
0x1581:   eb af                           	jmp 0x1532 <phase_3+0x6f>
0x1583:   b8 00 00 00 00                  	mov eax, 0
0x1588:   eb ad                           	jmp 0x1537 <phase_3+0x74>
0x158a:   b8 00 00 00 00                  	mov eax, 0
0x158f:   eb ab                           	jmp 0x153c <phase_3+0x79>
0x1591:   e8 40 06 00 00                  	call 0x1bd6 <explode_bomb>
0x1596:   b8 00 00 00 00                  	mov eax, 0
0x159b:   eb a4                           	jmp 0x1541 <phase_3+0x7e>
0x159d:   e8 de fa ff ff                  	call 0x1080 <__stack_chk_fail>
; function: func4 at 0x15a2 -- 0x15e1
0x15a2:   48 83 ec 08                     	sub rsp, 8
0x15a6:   89 d0                           	mov eax, edx
0x15a8:   29 f0                           	sub eax, esi
0x15aa:   89 c1                           	mov ecx, eax
0x15ac:   c1 e9 1f                        	shr ecx, 0x1f
0x15af:   01 c1                           	add ecx, eax
0x15b1:   d1 f9                           	sar ecx, 1
0x15b3:   01 f1                           	add ecx, esi
0x15b5:   39 f9                           	cmp ecx, edi
0x15b7:   7f 0e                           	jg 0x15c7 <func4+0x25>
0x15b9:   b8 00 00 00 00                  	mov eax, 0
0x15be:   39 f9                           	cmp ecx, edi
0x15c0:   7c 11                           	jl 0x15d3 <func4+0x31>
0x15c2:   48 83 c4 08                     	add rsp, 8
0x15c6:   c3                              	ret 
0x15c7:   8d 51 ff                        	lea edx, [rcx - 1]
0x15ca:   e8 d3 ff ff ff                  	call 0x15a2 <func4>
0x15cf:   01 c0                           	add eax, eax
0x15d1:   eb ef                           	jmp 0x15c2 <func4+0x20>
0x15d3:   8d 71 01                        	lea esi, [rcx + 1]
0x15d6:   e8 c7 ff ff ff                  	call 0x15a2 <func4>
0x15db:   8d 44 00 01                     	lea eax, [rax + rax + 1]
0x15df:   eb e1                           	jmp 0x15c2 <func4+0x20>
; function: phase_4 at 0x15e1 -- 0x1656
0x15e1:   48 83 ec 18                     	sub rsp, 0x18
0x15e5:   64 48 8b 04 25 28 00 00 00      	mov rax, qword ptr fs:[0x28]
0x15ee:   48 89 44 24 08                  	mov qword ptr [rsp + 8], rax
0x15f3:   31 c0                           	xor eax, eax
0x15f5:   48 8d 4c 24 04                  	lea rcx, [rsp + 4]
0x15fa:   48 89 e2                        	mov rdx, rsp
0x15fd:   48 8d 35 f9 1d 00 00            	lea rsi, [rip + 0x1df9]
0x1604:   e8 17 fb ff ff                  	call 0x1120 <sscanf>
0x1609:   83 f8 02                        	cmp eax, 2
0x160c:   75 06                           	jne 0x1614 <phase_4+0x33>
0x160e:   83 3c 24 0e                     	cmp dword ptr [rsp], 0xe
0x1612:   76 05                           	jbe 0x1619 <phase_4+0x38>
0x1614:   e8 bd 05 00 00                  	call 0x1bd6 <explode_bomb>
0x1619:   ba 0e 00 00 00                  	mov edx, 0xe
0x161e:   be 00 00 00 00                  	mov esi, 0
0x1623:   8b 3c 24                        	mov edi, dword ptr [rsp]
0x1626:   e8 77 ff ff ff                  	call 0x15a2 <func4>
0x162b:   83 f8 07                        	cmp eax, 7
0x162e:   75 07                           	jne 0x1637 <phase_4+0x56>
0x1630:   83 7c 24 04 07                  	cmp dword ptr [rsp + 4], 7
0x1635:   74 05                           	je 0x163c <phase_4+0x5b>
0x1637:   e8 9a 05 00 00                  	call 0x1bd6 <explode_bomb>
0x163c:   48 8b 44 24 08                  	mov rax, qword ptr [rsp + 8]
0x1641:   64 48 33 04 25 28 00 00 00      	xor rax, qword ptr fs:[0x28]
0x164a:   75 05                           	jne 0x1651 <phase_4+0x70>
0x164c:   48 83 c4 18                     	add rsp, 0x18
0x1650:   c3                              	ret 
0x1651:   e8 2a fa ff ff                  	call 0x1080 <__stack_chk_fail>
; function: phase_5 at 0x1656 -- 0x169c
0x1656:   53                              	push rbx
0x1657:   48 89 fb                        	mov rbx, rdi
0x165a:   e8 9d 02 00 00                  	call 0x18fc <string_length>
0x165f:   83 f8 06                        	cmp eax, 6
0x1662:   75 31                           	jne 0x1695 <phase_5+0x3f>
0x1664:   48 89 d8                        	mov rax, rbx
0x1667:   48 8d 7b 06                     	lea rdi, [rbx + 6]
0x166b:   b9 00 00 00 00                  	mov ecx, 0
0x1670:   48 8d 35 49 1b 00 00            	lea rsi, [rip + 0x1b49]
0x1677:   0f b6 10                        	movzx edx, byte ptr [rax]
0x167a:   83 e2 0f                        	and edx, 0xf
0x167d:   03 0c 96                        	add ecx, dword ptr [rsi + rdx*4]
0x1680:   48 83 c0 01                     	add rax, 1
0x1684:   48 39 f8                        	cmp rax, rdi
0x1687:   75 ee                           	jne 0x1677 <phase_5+0x21>
0x1689:   83 f9 3f                        	cmp ecx, 0x3f
0x168c:   74 05                           	je 0x1693 <phase_5+0x3d>
0x168e:   e8 43 05 00 00                  	call 0x1bd6 <explode_bomb>
0x1693:   5b                              	pop rbx
0x1694:   c3                              	ret 
0x1695:   e8 3c 05 00 00                  	call 0x1bd6 <explode_bomb>
0x169a:   eb c8                           	jmp 0x1664 <phase_5+0xe>
; function: phase_6 at 0x169c -- 0x17e2
0x169c:   41 56                           	push r14
0x169e:   41 55                           	push r13
0x16a0:   41 54                           	push r12
0x16a2:   55                              	push rbp
0x16a3:   53                              	push rbx
0x16a4:   48 83 ec 60                     	sub rsp, 0x60
0x16a8:   64 48 8b 04 25 28 00 00 00      	mov rax, qword ptr fs:[0x28]
0x16b1:   48 89 44 24 58                  	mov qword ptr [rsp + 0x58], rax
0x16b6:   31 c0                           	xor eax, eax
0x16b8:   49 89 e5                        	mov r13, rsp
0x16bb:   4c 89 ee                        	mov rsi, r13
0x16be:   e8 4f 05 00 00                  	call 0x1c12 <read_six_numbers>
0x16c3:   4d 89 ec                        	mov r12, r13
0x16c6:   41 be 00 00 00 00               	mov r14d, 0
0x16cc:   eb 25                           	jmp 0x16f3 <phase_6+0x57>
0x16ce:   e8 03 05 00 00                  	call 0x1bd6 <explode_bomb>
0x16d3:   eb 2d                           	jmp 0x1702 <phase_6+0x66>
0x16d5:   83 c3 01                        	add ebx, 1
0x16d8:   83 fb 05                        	cmp ebx, 5
0x16db:   7f 12                           	jg 0x16ef <phase_6+0x53>
0x16dd:   48 63 c3                        	movsxd rax, ebx
0x16e0:   8b 04 84                        	mov eax, dword ptr [rsp + rax*4]
0x16e3:   39 45 00                        	cmp dword ptr [rbp], eax
0x16e6:   75 ed                           	jne 0x16d5 <phase_6+0x39>
0x16e8:   e8 e9 04 00 00                  	call 0x1bd6 <explode_bomb>
0x16ed:   eb e6                           	jmp 0x16d5 <phase_6+0x39>
0x16ef:   49 83 c5 04                     	add r13, 4
0x16f3:   4c 89 ed                        	mov rbp, r13
0x16f6:   41 8b 45 00                     	mov eax, dword ptr [r13]
0x16fa:   83 e8 01                        	sub eax, 1
0x16fd:   83 f8 05                        	cmp eax, 5
0x1700:   77 cc                           	ja 0x16ce <phase_6+0x32>
0x1702:   41 83 c6 01                     	add r14d, 1
0x1706:   41 83 fe 06                     	cmp r14d, 6
0x170a:   74 05                           	je 0x1711 <phase_6+0x75>
0x170c:   44 89 f3                        	mov ebx, r14d
0x170f:   eb cc                           	jmp 0x16dd <phase_6+0x41>
0x1711:   49 8d 4c 24 18                  	lea rcx, [r12 + 0x18]
0x1716:   ba 07 00 00 00                  	mov edx, 7
0x171b:   89 d0                           	mov eax, edx
0x171d:   41 2b 04 24                     	sub eax, dword ptr [r12]
0x1721:   41 89 04 24                     	mov dword ptr [r12], eax
0x1725:   49 83 c4 04                     	add r12, 4
0x1729:   4c 39 e1                        	cmp rcx, r12
0x172c:   75 ed                           	jne 0x171b <phase_6+0x7f>
0x172e:   be 00 00 00 00                  	mov esi, 0
0x1733:   eb 1a                           	jmp 0x174f <phase_6+0xb3>
0x1735:   48 8b 52 08                     	mov rdx, qword ptr [rdx + 8]
0x1739:   83 c0 01                        	add eax, 1
0x173c:   39 c8                           	cmp eax, ecx
0x173e:   75 f5                           	jne 0x1735 <phase_6+0x99>
0x1740:   48 89 54 f4 20                  	mov qword ptr [rsp + rsi*8 + 0x20], rdx
0x1745:   48 83 c6 01                     	add rsi, 1
0x1749:   48 83 fe 06                     	cmp rsi, 6
0x174d:   74 16                           	je 0x1765 <phase_6+0xc9>
0x174f:   8b 0c b4                        	mov ecx, dword ptr [rsp + rsi*4]
0x1752:   b8 01 00 00 00                  	mov eax, 1
0x1757:   48 8d 15 d2 3a 00 00            	lea rdx, [rip + 0x3ad2]
0x175e:   83 f9 01                        	cmp ecx, 1
0x1761:   7f d2                           	jg 0x1735 <phase_6+0x99>
0x1763:   eb db                           	jmp 0x1740 <phase_6+0xa4>
0x1765:   48 8b 5c 24 20                  	mov rbx, qword ptr [rsp + 0x20]
0x176a:   48 8b 44 24 28                  	mov rax, qword ptr [rsp + 0x28]
0x176f:   48 89 43 08                     	mov qword ptr [rbx + 8], rax
0x1773:   48 8b 54 24 30                  	mov rdx, qword ptr [rsp + 0x30]
0x1778:   48 89 50 08                     	mov qword ptr [rax + 8], rdx
0x177c:   48 8b 44 24 38                  	mov rax, qword ptr [rsp + 0x38]
0x1781:   48 89 42 08                     	mov qword ptr [rdx + 8], rax
0x1785:   48 8b 54 24 40                  	mov rdx, qword ptr [rsp + 0x40]
0x178a:   48 89 50 08                     	mov qword ptr [rax + 8], rdx
0x178e:   48 8b 44 24 48                  	mov rax, qword ptr [rsp + 0x48]
0x1793:   48 89 42 08                     	mov qword ptr [rdx + 8], rax
0x1797:   48 c7 40 08 00 00 00 00         	mov qword ptr [rax + 8], 0
0x179f:   bd 05 00 00 00                  	mov ebp, 5
0x17a4:   eb 09                           	jmp 0x17af <phase_6+0x113>
0x17a6:   48 8b 5b 08                     	mov rbx, qword ptr [rbx + 8]
0x17aa:   83 ed 01                        	sub ebp, 1
0x17ad:   74 11                           	je 0x17c0 <phase_6+0x124>
0x17af:   48 8b 43 08                     	mov rax, qword ptr [rbx + 8]
0x17b3:   8b 00                           	mov eax, dword ptr [rax]
0x17b5:   39 03                           	cmp dword ptr [rbx], eax
0x17b7:   7d ed                           	jge 0x17a6 <phase_6+0x10a>
0x17b9:   e8 18 04 00 00                  	call 0x1bd6 <explode_bomb>
0x17be:   eb e6                           	jmp 0x17a6 <phase_6+0x10a>
0x17c0:   48 8b 44 24 58                  	mov rax, qword ptr [rsp + 0x58]
0x17c5:   64 48 33 04 25 28 00 00 00      	xor rax, qword ptr fs:[0x28]
0x17ce:   75 0d                           	jne 0x17dd <phase_6+0x141>
0x17d0:   48 83 c4 60                     	add rsp, 0x60
0x17d4:   5b                              	pop rbx
0x17d5:   5d                              	pop rbp
0x17d6:   41 5c                           	pop r12
0x17d8:   41 5d                           	pop r13
0x17da:   41 5e                           	pop r14
0x17dc:   c3                              	ret 
0x17dd:   e8 9e f8 ff ff                  	call 0x1080 <__stack_chk_fail>
; function: fun7 at 0x17e2 -- 0x1821
0x17e2:   48 85 ff                        	test rdi, rdi
0x17e5:   74 34                           	je 0x181b <fun7+0x39>
0x17e7:   48 83 ec 08                     	sub rsp, 8
0x17eb:   8b 17                           	mov edx, dword ptr [rdi]
0x17ed:   39 f2                           	cmp edx, esi
0x17ef:   7f 0e                           	jg 0x17ff <fun7+0x1d>
0x17f1:   b8 00 00 00 00                  	mov eax, 0
0x17f6:   39 f2                           	cmp edx, esi
0x17f8:   75 12                           	jne 0x180c <fun7+0x2a>
0x17fa:   48 83 c4 08                     	add rsp, 8
0x17fe:   c3                              	ret 
0x17ff:   48 8b 7f 08                     	mov rdi, qword ptr [rdi + 8]
0x1803:   e8 da ff ff ff                  	call 0x17e2 <fun7>
0x1808:   01 c0                           	add eax, eax
0x180a:   eb ee                           	jmp 0x17fa <fun7+0x18>
0x180c:   48 8b 7f 10                     	mov rdi, qword ptr [rdi + 0x10]
0x1810:   e8 cd ff ff ff                  	call 0x17e2 <fun7>
0x1815:   8d 44 00 01                     	lea eax, [rax + rax + 1]
0x1819:   eb df                           	jmp 0x17fa <fun7+0x18>
0x181b:   b8 ff ff ff ff                  	mov eax, 0xffffffff
0x1820:   c3                              	ret 
; function: secret_phase at 0x1821 -- 0x1879
0x1821:   53                              	push rbx
0x1822:   e8 2c 04 00 00                  	call 0x1c53 <read_line>
0x1827:   ba 0a 00 00 00                  	mov edx, 0xa
0x182c:   be 00 00 00 00                  	mov esi, 0
0x1831:   48 89 c7                        	mov rdi, rax
0x1834:   e8 c7 f8 ff ff                  	call 0x1100 <strtol>
0x1839:   48 89 c3                        	mov rbx, rax
0x183c:   8d 40 ff                        	lea eax, [rax - 1]
0x183f:   3d e8 03 00 00                  	cmp eax, 0x3e8
0x1844:   77 25                           	ja 0x186b <secret_phase+0x4a>
0x1846:   89 de                           	mov esi, ebx
0x1848:   48 8d 3d 01 39 00 00            	lea rdi, [rip + 0x3901]
0x184f:   e8 8e ff ff ff                  	call 0x17e2 <fun7>
0x1854:   85 c0                           	test eax, eax
0x1856:   75 1a                           	jne 0x1872 <secret_phase+0x51>
0x1858:   48 8d 3d 19 19 00 00            	lea rdi, [rip + 0x1919]
0x185f:   e8 fc f7 ff ff                  	call 0x1060 <puts>
0x1864:   e8 47 05 00 00                  	call 0x1db0 <phase_defused>
0x1869:   5b                              	pop rbx
0x186a:   c3                              	ret 
0x186b:   e8 66 03 00 00                  	call 0x1bd6 <explode_bomb>
0x1870:   eb d4                           	jmp 0x1846 <secret_phase+0x25>
0x1872:   e8 5f 03 00 00                  	call 0x1bd6 <explode_bomb>
0x1877:   eb df                           	jmp 0x1858 <secret_phase+0x37>
; function: sig_handler at 0x1879 -- 0x18d5
0x1879:   48 83 ec 08                     	sub rsp, 8
0x187d:   48 8d 3d 7c 19 00 00            	lea rdi, [rip + 0x197c]
0x1884:   e8 d7 f7 ff ff                  	call 0x1060 <puts>
0x1889:   bf 03 00 00 00                  	mov edi, 3
0x188e:   e8 ed f8 ff ff                  	call 0x1180 <sleep>
0x1893:   48 8d 35 df 1a 00 00            	lea rsi, [rip + 0x1adf]
0x189a:   bf 01 00 00 00                  	mov edi, 1
0x189f:   b8 00 00 00 00                  	mov eax, 0
0x18a4:   e8 87 f8 ff ff                  	call 0x1130 <__printf_chk>
0x18a9:   48 8b 3d d0 3d 00 00            	mov rdi, qword ptr [rip + 0x3dd0]
0x18b0:   e8 5b f8 ff ff                  	call 0x1110 <fflush>
0x18b5:   bf 01 00 00 00                  	mov edi, 1
0x18ba:   e8 c1 f8 ff ff                  	call 0x1180 <sleep>
0x18bf:   48 8d 3d bb 1a 00 00            	lea rdi, [rip + 0x1abb]
0x18c6:   e8 95 f7 ff ff                  	call 0x1060 <puts>
0x18cb:   bf 10 00 00 00                  	mov edi, 0x10
0x18d0:   e8 7b f8 ff ff                  	call 0x1150 <exit>
; function: invalid_phase at 0x18d5 -- 0x18fc
0x18d5:   48 83 ec 08                     	sub rsp, 8
0x18d9:   48 89 fa                        	mov rdx, rdi
0x18dc:   48 8d 35 a6 1a 00 00            	lea rsi, [rip + 0x1aa6]
0x18e3:   bf 01 00 00 00                  	mov edi, 1
0x18e8:   b8 00 00 00 00                  	mov eax, 0
0x18ed:   e8 3e f8 ff ff                  	call 0x1130 <__printf_chk>
0x18f2:   bf 08 00 00 00                  	mov edi, 8
0x18f7:   e8 54 f8 ff ff                  	call 0x1150 <exit>
; function: string_length at 0x18fc -- 0x1919
0x18fc:   80 3f 00                        	cmp byte ptr [rdi], 0
0x18ff:   74 12                           	je 0x1913 <string_length+0x17>
0x1901:   48 89 fa                        	mov rdx, rdi
0x1904:   48 83 c2 01                     	add rdx, 1
0x1908:   89 d0                           	mov eax, edx
0x190a:   29 f8                           	sub eax, edi
0x190c:   80 3a 00                        	cmp byte ptr [rdx], 0
0x190f:   75 f3                           	jne 0x1904 <string_length+0x8>
0x1911:   f3 c3                           	ret 
0x1913:   b8 00 00 00 00                  	mov eax, 0
0x1918:   c3                              	ret 
; function: strings_not_equal at 0x1919 -- 0x1980
0x1919:   41 54                           	push r12
0x191b:   55                              	push rbp
0x191c:   53                              	push rbx
0x191d:   48 89 fb                        	mov rbx, rdi
0x1920:   48 89 f5                        	mov rbp, rsi
0x1923:   e8 d4 ff ff ff                  	call 0x18fc <string_length>
0x1928:   41 89 c4                        	mov r12d, eax
0x192b:   48 89 ef                        	mov rdi, rbp
0x192e:   e8 c9 ff ff ff                  	call 0x18fc <string_length>
0x1933:   ba 01 00 00 00                  	mov edx, 1
0x1938:   41 39 c4                        	cmp r12d, eax
0x193b:   74 07                           	je 0x1944 <strings_not_equal+0x2b>
0x193d:   89 d0                           	mov eax, edx
0x193f:   5b                              	pop rbx
0x1940:   5d                              	pop rbp
0x1941:   41 5c                           	pop r12
0x1943:   c3                              	ret 
0x1944:   0f b6 03                        	movzx eax, byte ptr [rbx]
0x1947:   84 c0                           	test al, al
0x1949:   74 27                           	je 0x1972 <strings_not_equal+0x59>
0x194b:   3a 45 00                        	cmp al, byte ptr [rbp]
0x194e:   75 29                           	jne 0x1979 <strings_not_equal+0x60>
0x1950:   48 83 c3 01                     	add rbx, 1
0x1954:   48 83 c5 01                     	add rbp, 1
0x1958:   0f b6 03                        	movzx eax, byte ptr [rbx]
0x195b:   84 c0                           	test al, al
0x195d:   74 0c                           	je 0x196b <strings_not_equal+0x52>
0x195f:   38 45 00                        	cmp byte ptr [rbp], al
0x1962:   74 ec                           	je 0x1950 <strings_not_equal+0x37>
0x1964:   ba 01 00 00 00                  	mov edx, 1
0x1969:   eb d2                           	jmp 0x193d <strings_not_equal+0x24>
0x196b:   ba 00 00 00 00                  	mov edx, 0
0x1970:   eb cb                           	jmp 0x193d <strings_not_equal+0x24>
0x1972:   ba 00 00 00 00                  	mov edx, 0
0x1977:   eb c4                           	jmp 0x193d <strings_not_equal+0x24>
0x1979:   ba 01 00 00 00                  	mov edx, 1
0x197e:   eb bd                           	jmp 0x193d <strings_not_equal+0x24>
; function: initialize_bomb at 0x1980 -- 0x19fa
0x1980:   48 81 ec 18 20 00 00            	sub rsp, 0x2018
0x1987:   64 48 8b 04 25 28 00 00 00      	mov rax, qword ptr fs:[0x28]
0x1990:   48 89 84 24 08 20 00 00         	mov qword ptr [rsp + 0x2008], rax
0x1998:   31 c0                           	xor eax, eax
0x199a:   48 8d 35 d8 fe ff ff            	lea rsi, [rip - 0x128]
0x19a1:   bf 02 00 00 00                  	mov edi, 2
0x19a6:   e8 25 f7 ff ff                  	call 0x10d0 <signal>
0x19ab:   48 89 e7                        	mov rdi, rsp
0x19ae:   e8 19 0e 00 00                  	call 0x27cc <init_driver>
0x19b3:   85 c0                           	test eax, eax
0x19b5:   78 1b                           	js 0x19d2 <initialize_bomb+0x52>
0x19b7:   48 8b 84 24 08 20 00 00         	mov rax, qword ptr [rsp + 0x2008]
0x19bf:   64 48 33 04 25 28 00 00 00      	xor rax, qword ptr fs:[0x28]
0x19c8:   75 2b                           	jne 0x19f5 <initialize_bomb+0x75>
0x19ca:   48 81 c4 18 20 00 00            	add rsp, 0x2018
0x19d1:   c3                              	ret 
0x19d2:   48 89 e2                        	mov rdx, rsp
0x19d5:   48 8d 35 be 19 00 00            	lea rsi, [rip + 0x19be]
0x19dc:   bf 01 00 00 00                  	mov edi, 1
0x19e1:   b8 00 00 00 00                  	mov eax, 0
0x19e6:   e8 45 f7 ff ff                  	call 0x1130 <__printf_chk>
0x19eb:   bf 08 00 00 00                  	mov edi, 8
0x19f0:   e8 5b f7 ff ff                  	call 0x1150 <exit>
0x19f5:   e8 86 f6 ff ff                  	call 0x1080 <__stack_chk_fail>
; function: initialize_bomb_solve at 0x19fa -- 0x19fc
0x19fa:   f3 c3                           	ret 
; function: blank_line at 0x19fc -- 0x1a37
0x19fc:   55                              	push rbp
0x19fd:   53                              	push rbx
0x19fe:   48 83 ec 08                     	sub rsp, 8
0x1a02:   48 89 fd                        	mov rbp, rdi
0x1a05:   0f b6 5d 00                     	movzx ebx, byte ptr [rbp]
0x1a09:   84 db                           	test bl, bl
0x1a0b:   74 1e                           	je 0x1a2b <blank_line+0x2f>
0x1a0d:   e8 7e f7 ff ff                  	call 0x1190 <__ctype_b_loc>
0x1a12:   48 83 c5 01                     	add rbp, 1
0x1a16:   48 0f be db                     	movsx rbx, bl
0x1a1a:   48 8b 00                        	mov rax, qword ptr [rax]
0x1a1d:   f6 44 58 01 20                  	test byte ptr [rax + rbx*2 + 1], 0x20
0x1a22:   75 e1                           	jne 0x1a05 <blank_line+0x9>
0x1a24:   b8 00 00 00 00                  	mov eax, 0
0x1a29:   eb 05                           	jmp 0x1a30 <blank_line+0x34>
0x1a2b:   b8 01 00 00 00                  	mov eax, 1
0x1a30:   48 83 c4 08                     	add rsp, 8
0x1a34:   5b                              	pop rbx
0x1a35:   5d                              	pop rbp
0x1a36:   c3                              	ret 
; function: skip at 0x1a37 -- 0x1a85
0x1a37:   55                              	push rbp
0x1a38:   53                              	push rbx
0x1a39:   48 83 ec 08                     	sub rsp, 8
0x1a3d:   48 8d 2d 7c 3c 00 00            	lea rbp, [rip + 0x3c7c]
0x1a44:   48 63 05 61 3c 00 00            	movsxd rax, dword ptr [rip + 0x3c61]
0x1a4b:   48 8d 3c 80                     	lea rdi, [rax + rax*4]
0x1a4f:   48 c1 e7 04                     	shl rdi, 4
0x1a53:   48 01 ef                        	add rdi, rbp
0x1a56:   48 8b 15 53 3c 00 00            	mov rdx, qword ptr [rip + 0x3c53]
0x1a5d:   be 50 00 00 00                  	mov esi, 0x50
0x1a62:   e8 59 f6 ff ff                  	call 0x10c0 <fgets>
0x1a67:   48 89 c3                        	mov rbx, rax
0x1a6a:   48 85 c0                        	test rax, rax
0x1a6d:   74 0c                           	je 0x1a7b <skip+0x44>
0x1a6f:   48 89 c7                        	mov rdi, rax
0x1a72:   e8 85 ff ff ff                  	call 0x19fc <blank_line>
0x1a77:   85 c0                           	test eax, eax
0x1a79:   75 c9                           	jne 0x1a44 <skip+0xd>
0x1a7b:   48 89 d8                        	mov rax, rbx
0x1a7e:   48 83 c4 08                     	add rsp, 8
0x1a82:   5b                              	pop rbx
0x1a83:   5d                              	pop rbp
0x1a84:   c3                              	ret 
; function: test_connection at 0x1a85 -- 0x1ab2
0x1a85:   48 83 ec 08                     	sub rsp, 8
0x1a89:   b8 00 00 00 00                  	mov eax, 0
0x1a8e:   e8 42 0f 00 00                  	call 0x29d5 <driver_ping>
0x1a93:   85 c0                           	test eax, eax
0x1a95:   75 05                           	jne 0x1a9c <test_connection+0x17>
0x1a97:   48 83 c4 08                     	add rsp, 8
0x1a9b:   c3                              	ret 
0x1a9c:   48 8d 3d 95 17 00 00            	lea rdi, [rip + 0x1795]
0x1aa3:   e8 b8 f5 ff ff                  	call 0x1060 <puts>
0x1aa8:   bf 0a 00 00 00                  	mov edi, 0xa
0x1aad:   e8 9e f6 ff ff                  	call 0x1150 <exit>
; function: send_msg at 0x1ab2 -- 0x1bd6
0x1ab2:   53                              	push rbx
0x1ab3:   48 81 ec 10 40 00 00            	sub rsp, 0x4010
0x1aba:   41 89 f8                        	mov r8d, edi
0x1abd:   64 48 8b 04 25 28 00 00 00      	mov rax, qword ptr fs:[0x28]
0x1ac6:   48 89 84 24 08 40 00 00         	mov qword ptr [rsp + 0x4008], rax
0x1ace:   31 c0                           	xor eax, eax
0x1ad0:   8b 35 d6 3b 00 00               	mov esi, dword ptr [rip + 0x3bd6]
0x1ad6:   8d 46 ff                        	lea eax, [rsi - 1]
0x1ad9:   48 98                           	cdqe 
0x1adb:   48 8d 14 80                     	lea rdx, [rax + rax*4]
0x1adf:   48 c1 e2 04                     	shl rdx, 4
0x1ae3:   48 8d 05 d6 3b 00 00            	lea rax, [rip + 0x3bd6]
0x1aea:   48 01 c2                        	add rdx, rax
0x1aed:   48 c7 c1 ff ff ff ff            	mov rcx, 0xffffffffffffffff
0x1af4:   b8 00 00 00 00                  	mov eax, 0
0x1af9:   48 89 d7                        	mov rdi, rdx
0x1afc:   f2 ae                           	repne scasb al, byte ptr [rdi]
0x1afe:   48 89 c8                        	mov rax, rcx
0x1b01:   48 f7 d0                        	not rax
0x1b04:   48 83 c0 63                     	add rax, 0x63
0x1b08:   48 3d 00 20 00 00               	cmp rax, 0x2000
0x1b0e:   0f 87 86 00 00 00               	ja 0x1b9a <send_msg+0xe8>
0x1b14:   45 85 c0                        	test r8d, r8d
0x1b17:   4c 8d 0d 96 18 00 00            	lea r9, [rip + 0x1896]
0x1b1e:   48 8d 05 97 18 00 00            	lea rax, [rip + 0x1897]
0x1b25:   4c 0f 44 c8                     	cmove r9, rax
0x1b29:   48 89 e3                        	mov rbx, rsp
0x1b2c:   52                              	push rdx
0x1b2d:   56                              	push rsi
0x1b2e:   44 8b 05 0f 36 00 00            	mov r8d, dword ptr [rip + 0x360f]
0x1b35:   48 8d 0d 89 18 00 00            	lea rcx, [rip + 0x1889]
0x1b3c:   ba 00 20 00 00                  	mov edx, 0x2000
0x1b41:   be 01 00 00 00                  	mov esi, 1
0x1b46:   48 89 df                        	mov rdi, rbx
0x1b49:   b8 00 00 00 00                  	mov eax, 0
0x1b4e:   e8 4d f6 ff ff                  	call 0x11a0 <__sprintf_chk>
0x1b53:   4c 8d 84 24 10 20 00 00         	lea r8, [rsp + 0x2010]
0x1b5b:   b9 00 00 00 00                  	mov ecx, 0
0x1b60:   48 89 da                        	mov rdx, rbx
0x1b63:   48 8d 35 b6 35 00 00            	lea rsi, [rip + 0x35b6]
0x1b6a:   48 8d 3d c7 35 00 00            	lea rdi, [rip + 0x35c7]
0x1b71:   e8 41 0f 00 00                  	call 0x2ab7 <driver_post>
0x1b76:   48 83 c4 10                     	add rsp, 0x10
0x1b7a:   85 c0                           	test eax, eax
0x1b7c:   78 3c                           	js 0x1bba <send_msg+0x108>
0x1b7e:   48 8b 84 24 08 40 00 00         	mov rax, qword ptr [rsp + 0x4008]
0x1b86:   64 48 33 04 25 28 00 00 00      	xor rax, qword ptr fs:[0x28]
0x1b8f:   75 40                           	jne 0x1bd1 <send_msg+0x11f>
0x1b91:   48 81 c4 10 40 00 00            	add rsp, 0x4010
0x1b98:   5b                              	pop rbx
0x1b99:   c3                              	ret 
0x1b9a:   48 8d 35 b7 16 00 00            	lea rsi, [rip + 0x16b7]
0x1ba1:   bf 01 00 00 00                  	mov edi, 1
0x1ba6:   b8 00 00 00 00                  	mov eax, 0
0x1bab:   e8 80 f5 ff ff                  	call 0x1130 <__printf_chk>
0x1bb0:   bf 08 00 00 00                  	mov edi, 8
0x1bb5:   e8 96 f5 ff ff                  	call 0x1150 <exit>
0x1bba:   48 8d bc 24 00 20 00 00         	lea rdi, [rsp + 0x2000]
0x1bc2:   e8 99 f4 ff ff                  	call 0x1060 <puts>
0x1bc7:   bf 00 00 00 00                  	mov edi, 0
0x1bcc:   e8 7f f5 ff ff                  	call 0x1150 <exit>
0x1bd1:   e8 aa f4 ff ff                  	call 0x1080 <__stack_chk_fail>
; function: explode_bomb at 0x1bd6 -- 0x1c12
0x1bd6:   48 83 ec 08                     	sub rsp, 8
0x1bda:   48 8d 3d f0 17 00 00            	lea rdi, [rip + 0x17f0]
0x1be1:   e8 7a f4 ff ff                  	call 0x1060 <puts>
0x1be6:   48 8d 3d ed 17 00 00            	lea rdi, [rip + 0x17ed]
0x1bed:   e8 6e f4 ff ff                  	call 0x1060 <puts>
0x1bf2:   bf 00 00 00 00                  	mov edi, 0
0x1bf7:   e8 b6 fe ff ff                  	call 0x1ab2 <send_msg>
0x1bfc:   48 8d 3d 7d 16 00 00            	lea rdi, [rip + 0x167d]
0x1c03:   e8 58 f4 ff ff                  	call 0x1060 <puts>
0x1c08:   bf 08 00 00 00                  	mov edi, 8
0x1c0d:   e8 3e f5 ff ff                  	call 0x1150 <exit>
; function: read_six_numbers at 0x1c12 -- 0x1c53
0x1c12:   48 83 ec 08                     	sub rsp, 8
0x1c16:   48 89 f2                        	mov rdx, rsi
0x1c19:   48 8d 4e 04                     	lea rcx, [rsi + 4]
0x1c1d:   48 8d 46 14                     	lea rax, [rsi + 0x14]
0x1c21:   50                              	push rax
0x1c22:   48 8d 46 10                     	lea rax, [rsi + 0x10]
0x1c26:   50                              	push rax
0x1c27:   4c 8d 4e 0c                     	lea r9, [rsi + 0xc]
0x1c2b:   4c 8d 46 08                     	lea r8, [rsi + 8]
0x1c2f:   48 8d 35 bb 17 00 00            	lea rsi, [rip + 0x17bb]
0x1c36:   b8 00 00 00 00                  	mov eax, 0
0x1c3b:   e8 e0 f4 ff ff                  	call 0x1120 <sscanf>
0x1c40:   48 83 c4 10                     	add rsp, 0x10
0x1c44:   83 f8 05                        	cmp eax, 5
0x1c47:   7e 05                           	jle 0x1c4e <read_six_numbers+0x3c>
0x1c49:   48 83 c4 08                     	add rsp, 8
0x1c4d:   c3                              	ret 
0x1c4e:   e8 83 ff ff ff                  	call 0x1bd6 <explode_bomb>
; function: read_line at 0x1c53 -- 0x1db0
0x1c53:   53                              	push rbx
0x1c54:   b8 00 00 00 00                  	mov eax, 0
0x1c59:   e8 d9 fd ff ff                  	call 0x1a37 <skip>
0x1c5e:   48 85 c0                        	test rax, rax
0x1c61:   0f 84 87 00 00 00               	je 0x1cee <read_line+0x9b>
0x1c67:   8b 15 3f 3a 00 00               	mov edx, dword ptr [rip + 0x3a3f]
0x1c6d:   48 63 c2                        	movsxd rax, edx
0x1c70:   48 8d 04 80                     	lea rax, [rax + rax*4]
0x1c74:   48 c1 e0 04                     	shl rax, 4
0x1c78:   48 8d 0d 41 3a 00 00            	lea rcx, [rip + 0x3a41]
0x1c7f:   48 8d 3c 01                     	lea rdi, [rcx + rax]
0x1c83:   48 c7 c1 ff ff ff ff            	mov rcx, 0xffffffffffffffff
0x1c8a:   b8 00 00 00 00                  	mov eax, 0
0x1c8f:   f2 ae                           	repne scasb al, byte ptr [rdi]
0x1c91:   48 89 ce                        	mov rsi, rcx
0x1c94:   48 f7 d6                        	not rsi
0x1c97:   48 89 f1                        	mov rcx, rsi
0x1c9a:   48 83 e9 01                     	sub rcx, 1
0x1c9e:   83 f9 4e                        	cmp ecx, 0x4e
0x1ca1:   0f 8f bf 00 00 00               	jg 0x1d66 <read_line+0x113>
0x1ca7:   48 8d 1d 12 3a 00 00            	lea rbx, [rip + 0x3a12]
0x1cae:   83 e9 01                        	sub ecx, 1
0x1cb1:   48 63 c9                        	movsxd rcx, ecx
0x1cb4:   48 63 d2                        	movsxd rdx, edx
0x1cb7:   48 8d 04 92                     	lea rax, [rdx + rdx*4]
0x1cbb:   48 c1 e0 04                     	shl rax, 4
0x1cbf:   48 01 d8                        	add rax, rbx
0x1cc2:   c6 04 08 00                     	mov byte ptr [rax + rcx], 0
0x1cc6:   b8 00 00 00 00                  	mov eax, 0
0x1ccb:   e8 b5 fd ff ff                  	call 0x1a85 <test_connection>
0x1cd0:   8b 05 d6 39 00 00               	mov eax, dword ptr [rip + 0x39d6]
0x1cd6:   8d 50 01                        	lea edx, [rax + 1]
0x1cd9:   89 15 cd 39 00 00               	mov dword ptr [rip + 0x39cd], edx
0x1cdf:   48 98                           	cdqe 
0x1ce1:   48 8d 04 80                     	lea rax, [rax + rax*4]
0x1ce5:   48 c1 e0 04                     	shl rax, 4
0x1ce9:   48 01 d8                        	add rax, rbx
0x1cec:   5b                              	pop rbx
0x1ced:   c3                              	ret 
0x1cee:   48 8b 05 9b 39 00 00            	mov rax, qword ptr [rip + 0x399b]
0x1cf5:   48 39 05 b4 39 00 00            	cmp qword ptr [rip + 0x39b4], rax
0x1cfc:   74 1b                           	je 0x1d19 <read_line+0xc6>
0x1cfe:   48 8d 3d 1c 17 00 00            	lea rdi, [rip + 0x171c]
0x1d05:   e8 26 f3 ff ff                  	call 0x1030 <getenv>
0x1d0a:   48 85 c0                        	test rax, rax
0x1d0d:   74 20                           	je 0x1d2f <read_line+0xdc>
0x1d0f:   bf 00 00 00 00                  	mov edi, 0
0x1d14:   e8 37 f4 ff ff                  	call 0x1150 <exit>
0x1d19:   48 8d 3d e3 16 00 00            	lea rdi, [rip + 0x16e3]
0x1d20:   e8 3b f3 ff ff                  	call 0x1060 <puts>
0x1d25:   bf 08 00 00 00                  	mov edi, 8
0x1d2a:   e8 21 f4 ff ff                  	call 0x1150 <exit>
0x1d2f:   48 8b 05 5a 39 00 00            	mov rax, qword ptr [rip + 0x395a]
0x1d36:   48 89 05 73 39 00 00            	mov qword ptr [rip + 0x3973], rax
0x1d3d:   b8 00 00 00 00                  	mov eax, 0
0x1d42:   e8 f0 fc ff ff                  	call 0x1a37 <skip>
0x1d47:   48 85 c0                        	test rax, rax
0x1d4a:   0f 85 17 ff ff ff               	jne 0x1c67 <read_line+0x14>
0x1d50:   48 8d 3d ac 16 00 00            	lea rdi, [rip + 0x16ac]
0x1d57:   e8 04 f3 ff ff                  	call 0x1060 <puts>
0x1d5c:   bf 00 00 00 00                  	mov edi, 0
0x1d61:   e8 ea f3 ff ff                  	call 0x1150 <exit>
0x1d66:   48 8d 3d bf 16 00 00            	lea rdi, [rip + 0x16bf]
0x1d6d:   e8 ee f2 ff ff                  	call 0x1060 <puts>
0x1d72:   8b 05 34 39 00 00               	mov eax, dword ptr [rip + 0x3934]
0x1d78:   8d 50 01                        	lea edx, [rax + 1]
0x1d7b:   89 15 2b 39 00 00               	mov dword ptr [rip + 0x392b], edx
0x1d81:   48 98                           	cdqe 
0x1d83:   48 6b c0 50                     	imul rax, rax, 0x50
0x1d87:   48 8d 15 32 39 00 00            	lea rdx, [rip + 0x3932]
0x1d8e:   48 be 2a 2a 2a 74 72 75 6e 63   	movabs rsi, 0x636e7572742a2a2a
0x1d98:   48 bf 61 74 65 64 2a 2a 2a 00   	movabs rdi, 0x2a2a2a64657461
0x1da2:   48 89 34 02                     	mov qword ptr [rdx + rax], rsi
0x1da6:   48 89 7c 02 08                  	mov qword ptr [rdx + rax + 8], rdi
0x1dab:   e8 26 fe ff ff                  	call 0x1bd6 <explode_bomb>
; function: phase_defused at 0x1db0 -- 0x1e74
0x1db0:   48 83 ec 78                     	sub rsp, 0x78
0x1db4:   64 48 8b 04 25 28 00 00 00      	mov rax, qword ptr fs:[0x28]
0x1dbd:   48 89 44 24 68                  	mov qword ptr [rsp + 0x68], rax
0x1dc2:   31 c0                           	xor eax, eax
0x1dc4:   bf 01 00 00 00                  	mov edi, 1
0x1dc9:   e8 e4 fc ff ff                  	call 0x1ab2 <send_msg>
0x1dce:   83 3d d7 38 00 00 06            	cmp dword ptr [rip + 0x38d7], 6
0x1dd5:   74 19                           	je 0x1df0 <phase_defused+0x40>
0x1dd7:   48 8b 44 24 68                  	mov rax, qword ptr [rsp + 0x68]
0x1ddc:   64 48 33 04 25 28 00 00 00      	xor rax, qword ptr fs:[0x28]
0x1de5:   0f 85 84 00 00 00               	jne 0x1e6f <phase_defused+0xbf>
0x1deb:   48 83 c4 78                     	add rsp, 0x78
0x1def:   c3                              	ret 
0x1df0:   48 8d 4c 24 0c                  	lea rcx, [rsp + 0xc]
0x1df5:   48 8d 54 24 08                  	lea rdx, [rsp + 8]
0x1dfa:   4c 8d 44 24 10                  	lea r8, [rsp + 0x10]
0x1dff:   48 8d 35 41 16 00 00            	lea rsi, [rip + 0x1641]
0x1e06:   48 8d 3d a3 39 00 00            	lea rdi, [rip + 0x39a3]
0x1e0d:   b8 00 00 00 00                  	mov eax, 0
0x1e12:   e8 09 f3 ff ff                  	call 0x1120 <sscanf>
0x1e17:   83 f8 03                        	cmp eax, 3
0x1e1a:   74 1a                           	je 0x1e36 <phase_defused+0x86>
0x1e1c:   48 8d 3d e5 14 00 00            	lea rdi, [rip + 0x14e5]
0x1e23:   e8 38 f2 ff ff                  	call 0x1060 <puts>
0x1e28:   48 8d 3d 09 15 00 00            	lea rdi, [rip + 0x1509]
0x1e2f:   e8 2c f2 ff ff                  	call 0x1060 <puts>
0x1e34:   eb a1                           	jmp 0x1dd7 <phase_defused+0x27>
0x1e36:   48 8d 7c 24 10                  	lea rdi, [rsp + 0x10]
0x1e3b:   48 8d 35 0e 16 00 00            	lea rsi, [rip + 0x160e]
0x1e42:   e8 d2 fa ff ff                  	call 0x1919 <strings_not_equal>
0x1e47:   85 c0                           	test eax, eax
0x1e49:   75 d1                           	jne 0x1e1c <phase_defused+0x6c>
0x1e4b:   48 8d 3d 56 14 00 00            	lea rdi, [rip + 0x1456]
0x1e52:   e8 09 f2 ff ff                  	call 0x1060 <puts>
0x1e57:   48 8d 3d 72 14 00 00            	lea rdi, [rip + 0x1472]
0x1e5e:   e8 fd f1 ff ff                  	call 0x1060 <puts>
0x1e63:   b8 00 00 00 00                  	mov eax, 0
0x1e68:   e8 b4 f9 ff ff                  	call 0x1821 <secret_phase>
0x1e6d:   eb ad                           	jmp 0x1e1c <phase_defused+0x6c>
0x1e6f:   e8 0c f2 ff ff                  	call 0x1080 <__stack_chk_fail>
; function: sigalrm_handler at 0x1e74 -- 0x1ea4
0x1e74:   48 83 ec 08                     	sub rsp, 8
0x1e78:   b9 00 00 00 00                  	mov ecx, 0
0x1e7d:   48 8d 15 0c 16 00 00            	lea rdx, [rip + 0x160c]
0x1e84:   be 01 00 00 00                  	mov esi, 1
0x1e89:   48 8b 3d 10 38 00 00            	mov rdi, qword ptr [rip + 0x3810]
0x1e90:   b8 00 00 00 00                  	mov eax, 0
0x1e95:   e8 d6 f2 ff ff                  	call 0x1170 <__fprintf_chk>
0x1e9a:   bf 01 00 00 00                  	mov edi, 1
0x1e9f:   e8 ac f2 ff ff                  	call 0x1150 <exit>
; function: rio_readlineb at 0x1ea4 -- 0x1f60
0x1ea4:   41 56                           	push r14
0x1ea6:   41 55                           	push r13
0x1ea8:   41 54                           	push r12
0x1eaa:   55                              	push rbp
0x1eab:   53                              	push rbx
0x1eac:   48 89 fb                        	mov rbx, rdi
0x1eaf:   49 89 f4                        	mov r12, rsi
0x1eb2:   49 89 d6                        	mov r14, rdx
0x1eb5:   41 bd 01 00 00 00               	mov r13d, 1
0x1ebb:   48 8d 6f 10                     	lea rbp, [rdi + 0x10]
0x1ebf:   48 83 fa 01                     	cmp rdx, 1
0x1ec3:   77 0c                           	ja 0x1ed1 <rio_readlineb+0x2d>
0x1ec5:   eb 60                           	jmp 0x1f27 <rio_readlineb+0x83>
0x1ec7:   e8 74 f1 ff ff                  	call 0x1040 <__errno_location>
0x1ecc:   83 38 04                        	cmp dword ptr [rax], 4
0x1ecf:   75 67                           	jne 0x1f38 <rio_readlineb+0x94>
0x1ed1:   8b 43 04                        	mov eax, dword ptr [rbx + 4]
0x1ed4:   85 c0                           	test eax, eax
0x1ed6:   7f 20                           	jg 0x1ef8 <rio_readlineb+0x54>
0x1ed8:   ba 00 20 00 00                  	mov edx, 0x2000
0x1edd:   48 89 ee                        	mov rsi, rbp
0x1ee0:   8b 3b                           	mov edi, dword ptr [rbx]
0x1ee2:   e8 c9 f1 ff ff                  	call 0x10b0 <read>
0x1ee7:   89 43 04                        	mov dword ptr [rbx + 4], eax
0x1eea:   85 c0                           	test eax, eax
0x1eec:   78 d9                           	js 0x1ec7 <rio_readlineb+0x23>
0x1eee:   85 c0                           	test eax, eax
0x1ef0:   74 4f                           	je 0x1f41 <rio_readlineb+0x9d>
0x1ef2:   48 89 6b 08                     	mov qword ptr [rbx + 8], rbp
0x1ef6:   eb d9                           	jmp 0x1ed1 <rio_readlineb+0x2d>
0x1ef8:   48 8b 53 08                     	mov rdx, qword ptr [rbx + 8]
0x1efc:   0f b6 0a                        	movzx ecx, byte ptr [rdx]
0x1eff:   48 83 c2 01                     	add rdx, 1
0x1f03:   48 89 53 08                     	mov qword ptr [rbx + 8], rdx
0x1f07:   83 e8 01                        	sub eax, 1
0x1f0a:   89 43 04                        	mov dword ptr [rbx + 4], eax
0x1f0d:   49 83 c4 01                     	add r12, 1
0x1f11:   41 88 4c 24 ff                  	mov byte ptr [r12 - 1], cl
0x1f16:   80 f9 0a                        	cmp cl, 0xa
0x1f19:   74 0c                           	je 0x1f27 <rio_readlineb+0x83>
0x1f1b:   41 83 c5 01                     	add r13d, 1
0x1f1f:   49 63 c5                        	movsxd rax, r13d
0x1f22:   4c 39 f0                        	cmp rax, r14
0x1f25:   72 aa                           	jb 0x1ed1 <rio_readlineb+0x2d>
0x1f27:   41 c6 04 24 00                  	mov byte ptr [r12], 0
0x1f2c:   49 63 c5                        	movsxd rax, r13d
0x1f2f:   5b                              	pop rbx
0x1f30:   5d                              	pop rbp
0x1f31:   41 5c                           	pop r12
0x1f33:   41 5d                           	pop r13
0x1f35:   41 5e                           	pop r14
0x1f37:   c3                              	ret 
0x1f38:   48 c7 c0 ff ff ff ff            	mov rax, 0xffffffffffffffff
0x1f3f:   eb 05                           	jmp 0x1f46 <rio_readlineb+0xa2>
0x1f41:   b8 00 00 00 00                  	mov eax, 0
0x1f46:   85 c0                           	test eax, eax
0x1f48:   75 0d                           	jne 0x1f57 <rio_readlineb+0xb3>
0x1f4a:   b8 00 00 00 00                  	mov eax, 0
0x1f4f:   41 83 fd 01                     	cmp r13d, 1
0x1f53:   75 d2                           	jne 0x1f27 <rio_readlineb+0x83>
0x1f55:   eb d8                           	jmp 0x1f2f <rio_readlineb+0x8b>
0x1f57:   48 c7 c0 ff ff ff ff            	mov rax, 0xffffffffffffffff
0x1f5e:   eb cf                           	jmp 0x1f2f <rio_readlineb+0x8b>
; function: submitr at 0x1f60 -- 0x27a1
0x1f60:   41 57                           	push r15
0x1f62:   41 56                           	push r14
0x1f64:   41 55                           	push r13
0x1f66:   41 54                           	push r12
0x1f68:   55                              	push rbp
0x1f69:   53                              	push rbx
0x1f6a:   48 81 ec 78 a0 00 00            	sub rsp, 0xa078
0x1f71:   49 89 fd                        	mov r13, rdi
0x1f74:   89 f5                           	mov ebp, esi
0x1f76:   48 89 54 24 08                  	mov qword ptr [rsp + 8], rdx
0x1f7b:   48 89 4c 24 10                  	mov qword ptr [rsp + 0x10], rcx
0x1f80:   4c 89 44 24 20                  	mov qword ptr [rsp + 0x20], r8
0x1f85:   4c 89 4c 24 18                  	mov qword ptr [rsp + 0x18], r9
0x1f8a:   48 8b 9c 24 b0 a0 00 00         	mov rbx, qword ptr [rsp + 0xa0b0]
0x1f92:   4c 8b bc 24 b8 a0 00 00         	mov r15, qword ptr [rsp + 0xa0b8]
0x1f9a:   64 48 8b 04 25 28 00 00 00      	mov rax, qword ptr fs:[0x28]
0x1fa3:   48 89 84 24 68 a0 00 00         	mov qword ptr [rsp + 0xa068], rax
0x1fab:   31 c0                           	xor eax, eax
0x1fad:   c7 44 24 3c 00 00 00 00         	mov dword ptr [rsp + 0x3c], 0
0x1fb5:   ba 00 00 00 00                  	mov edx, 0
0x1fba:   be 01 00 00 00                  	mov esi, 1
0x1fbf:   bf 02 00 00 00                  	mov edi, 2
0x1fc4:   e8 e7 f1 ff ff                  	call 0x11b0 <socket>
0x1fc9:   85 c0                           	test eax, eax
0x1fcb:   0f 88 35 01 00 00               	js 0x2106 <submitr+0x1a6>
0x1fd1:   41 89 c4                        	mov r12d, eax
0x1fd4:   4c 89 ef                        	mov rdi, r13
0x1fd7:   e8 04 f1 ff ff                  	call 0x10e0 <gethostbyname>
0x1fdc:   48 85 c0                        	test rax, rax
0x1fdf:   0f 84 71 01 00 00               	je 0x2156 <submitr+0x1f6>
0x1fe5:   4c 8d 6c 24 40                  	lea r13, [rsp + 0x40]
0x1fea:   48 c7 44 24 42 00 00 00 00      	mov qword ptr [rsp + 0x42], 0
0x1ff3:   c7 44 24 4a 00 00 00 00         	mov dword ptr [rsp + 0x4a], 0
0x1ffb:   66 c7 44 24 4e 00 00            	mov word ptr [rsp + 0x4e], 0
0x2002:   66 c7 44 24 40 02 00            	mov word ptr [rsp + 0x40], 2
0x2009:   48 63 50 14                     	movsxd rdx, dword ptr [rax + 0x14]
0x200d:   48 8b 40 18                     	mov rax, qword ptr [rax + 0x18]
0x2011:   48 8d 7c 24 44                  	lea rdi, [rsp + 0x44]
0x2016:   b9 0c 00 00 00                  	mov ecx, 0xc
0x201b:   48 8b 30                        	mov rsi, qword ptr [rax]
0x201e:   e8 cd f0 ff ff                  	call 0x10f0 <__memmove_chk>
0x2023:   66 c1 c5 08                     	rol bp, 8
0x2027:   66 89 6c 24 42                  	mov word ptr [rsp + 0x42], bp
0x202c:   ba 10 00 00 00                  	mov edx, 0x10
0x2031:   4c 89 ee                        	mov rsi, r13
0x2034:   44 89 e7                        	mov edi, r12d
0x2037:   e8 24 f1 ff ff                  	call 0x1160 <connect>
0x203c:   85 c0                           	test eax, eax
0x203e:   0f 88 7d 01 00 00               	js 0x21c1 <submitr+0x261>
0x2044:   49 c7 c1 ff ff ff ff            	mov r9, 0xffffffffffffffff
0x204b:   b8 00 00 00 00                  	mov eax, 0
0x2050:   4c 89 c9                        	mov rcx, r9
0x2053:   48 89 df                        	mov rdi, rbx
0x2056:   f2 ae                           	repne scasb al, byte ptr [rdi]
0x2058:   48 89 ce                        	mov rsi, rcx
0x205b:   48 f7 d6                        	not rsi
0x205e:   4c 89 c9                        	mov rcx, r9
0x2061:   48 8b 7c 24 08                  	mov rdi, qword ptr [rsp + 8]
0x2066:   f2 ae                           	repne scasb al, byte ptr [rdi]
0x2068:   49 89 c8                        	mov r8, rcx
0x206b:   4c 89 c9                        	mov rcx, r9
0x206e:   48 8b 7c 24 10                  	mov rdi, qword ptr [rsp + 0x10]
0x2073:   f2 ae                           	repne scasb al, byte ptr [rdi]
0x2075:   48 89 ca                        	mov rdx, rcx
0x2078:   48 f7 d2                        	not rdx
0x207b:   4c 89 c9                        	mov rcx, r9
0x207e:   48 8b 7c 24 18                  	mov rdi, qword ptr [rsp + 0x18]
0x2083:   f2 ae                           	repne scasb al, byte ptr [rdi]
0x2085:   4c 29 c2                        	sub rdx, r8
0x2088:   48 29 ca                        	sub rdx, rcx
0x208b:   48 8d 44 76 fd                  	lea rax, [rsi + rsi*2 - 3]
0x2090:   48 8d 44 02 7b                  	lea rax, [rdx + rax + 0x7b]
0x2095:   48 3d 00 20 00 00               	cmp rax, 0x2000
0x209b:   0f 87 7d 01 00 00               	ja 0x221e <submitr+0x2be>
0x20a1:   48 8d 94 24 60 40 00 00         	lea rdx, [rsp + 0x4060]
0x20a9:   b9 00 04 00 00                  	mov ecx, 0x400
0x20ae:   b8 00 00 00 00                  	mov eax, 0
0x20b3:   48 89 d7                        	mov rdi, rdx
0x20b6:   f3 48 ab                        	rep stosq qword ptr [rdi], rax
0x20b9:   48 c7 c1 ff ff ff ff            	mov rcx, 0xffffffffffffffff
0x20c0:   48 89 df                        	mov rdi, rbx
0x20c3:   f2 ae                           	repne scasb al, byte ptr [rdi]
0x20c5:   48 89 ca                        	mov rdx, rcx
0x20c8:   48 f7 d2                        	not rdx
0x20cb:   48 89 d1                        	mov rcx, rdx
0x20ce:   48 83 e9 01                     	sub rcx, 1
0x20d2:   85 c9                           	test ecx, ecx
0x20d4:   0f 84 3f 06 00 00               	je 0x2719 <submitr+0x7b9>
0x20da:   8d 41 ff                        	lea eax, [rcx - 1]
0x20dd:   4c 8d 74 03 01                  	lea r14, [rbx + rax + 1]
0x20e2:   48 8d ac 24 60 40 00 00         	lea rbp, [rsp + 0x4060]
0x20ea:   48 8d 84 24 60 80 00 00         	lea rax, [rsp + 0x8060]
0x20f2:   48 89 44 24 28                  	mov qword ptr [rsp + 0x28], rax
0x20f7:   49 bd d9 ff 00 00 00 00 20 00   	movabs r13, 0x2000000000ffd9
0x2101:   e9 a6 01 00 00                  	jmp 0x22ac <submitr+0x34c>
0x2106:   48 b8 45 72 72 6f 72 3a 20 43   	movabs rax, 0x43203a726f727245
0x2110:   48 ba 6c 69 65 6e 74 20 75 6e   	movabs rdx, 0x6e7520746e65696c
0x211a:   49 89 07                        	mov qword ptr [r15], rax
0x211d:   49 89 57 08                     	mov qword ptr [r15 + 8], rdx
0x2121:   48 b8 61 62 6c 65 20 74 6f 20   	movabs rax, 0x206f7420656c6261
0x212b:   48 ba 63 72 65 61 74 65 20 73   	movabs rdx, 0x7320657461657263
0x2135:   49 89 47 10                     	mov qword ptr [r15 + 0x10], rax
0x2139:   49 89 57 18                     	mov qword ptr [r15 + 0x18], rdx
0x213d:   41 c7 47 20 6f 63 6b 65         	mov dword ptr [r15 + 0x20], 0x656b636f
0x2145:   66 41 c7 47 24 74 00            	mov word ptr [r15 + 0x24], 0x74
0x214c:   b8 ff ff ff ff                  	mov eax, 0xffffffff
0x2151:   e9 9a 04 00 00                  	jmp 0x25f0 <submitr+0x690>
0x2156:   48 b8 45 72 72 6f 72 3a 20 44   	movabs rax, 0x44203a726f727245
0x2160:   48 ba 4e 53 20 69 73 20 75 6e   	movabs rdx, 0x6e7520736920534e
0x216a:   49 89 07                        	mov qword ptr [r15], rax
0x216d:   49 89 57 08                     	mov qword ptr [r15 + 8], rdx
0x2171:   48 b8 61 62 6c 65 20 74 6f 20   	movabs rax, 0x206f7420656c6261
0x217b:   48 ba 72 65 73 6f 6c 76 65 20   	movabs rdx, 0x2065766c6f736572
0x2185:   49 89 47 10                     	mov qword ptr [r15 + 0x10], rax
0x2189:   49 89 57 18                     	mov qword ptr [r15 + 0x18], rdx
0x218d:   48 b8 73 65 72 76 65 72 20 61   	movabs rax, 0x6120726576726573
0x2197:   49 89 47 20                     	mov qword ptr [r15 + 0x20], rax
0x219b:   41 c7 47 28 64 64 72 65         	mov dword ptr [r15 + 0x28], 0x65726464
0x21a3:   66 41 c7 47 2c 73 73            	mov word ptr [r15 + 0x2c], 0x7373
0x21aa:   41 c6 47 2e 00                  	mov byte ptr [r15 + 0x2e], 0
0x21af:   44 89 e7                        	mov edi, r12d
0x21b2:   e8 e9 ee ff ff                  	call 0x10a0 <close>
0x21b7:   b8 ff ff ff ff                  	mov eax, 0xffffffff
0x21bc:   e9 2f 04 00 00                  	jmp 0x25f0 <submitr+0x690>
0x21c1:   48 b8 45 72 72 6f 72 3a 20 55   	movabs rax, 0x55203a726f727245
0x21cb:   48 ba 6e 61 62 6c 65 20 74 6f   	movabs rdx, 0x6f7420656c62616e
0x21d5:   49 89 07                        	mov qword ptr [r15], rax
0x21d8:   49 89 57 08                     	mov qword ptr [r15 + 8], rdx
0x21dc:   48 b8 20 63 6f 6e 6e 65 63 74   	movabs rax, 0x7463656e6e6f6320
0x21e6:   48 ba 20 74 6f 20 74 68 65 20   	movabs rdx, 0x20656874206f7420
0x21f0:   49 89 47 10                     	mov qword ptr [r15 + 0x10], rax
0x21f4:   49 89 57 18                     	mov qword ptr [r15 + 0x18], rdx
0x21f8:   41 c7 47 20 73 65 72 76         	mov dword ptr [r15 + 0x20], 0x76726573
0x2200:   66 41 c7 47 24 65 72            	mov word ptr [r15 + 0x24], 0x7265
0x2207:   41 c6 47 26 00                  	mov byte ptr [r15 + 0x26], 0
0x220c:   44 89 e7                        	mov edi, r12d
0x220f:   e8 8c ee ff ff                  	call 0x10a0 <close>
0x2214:   b8 ff ff ff ff                  	mov eax, 0xffffffff
0x2219:   e9 d2 03 00 00                  	jmp 0x25f0 <submitr+0x690>
0x221e:   48 b8 45 72 72 6f 72 3a 20 52   	movabs rax, 0x52203a726f727245
0x2228:   48 ba 65 73 75 6c 74 20 73 74   	movabs rdx, 0x747320746c757365
0x2232:   49 89 07                        	mov qword ptr [r15], rax
0x2235:   49 89 57 08                     	mov qword ptr [r15 + 8], rdx
0x2239:   48 b8 72 69 6e 67 20 74 6f 6f   	movabs rax, 0x6f6f7420676e6972
0x2243:   48 ba 20 6c 61 72 67 65 2e 20   	movabs rdx, 0x202e656772616c20
0x224d:   49 89 47 10                     	mov qword ptr [r15 + 0x10], rax
0x2251:   49 89 57 18                     	mov qword ptr [r15 + 0x18], rdx
0x2255:   48 b8 49 6e 63 72 65 61 73 65   	movabs rax, 0x6573616572636e49
0x225f:   48 ba 20 53 55 42 4d 49 54 52   	movabs rdx, 0x5254494d42555320
0x2269:   49 89 47 20                     	mov qword ptr [r15 + 0x20], rax
0x226d:   49 89 57 28                     	mov qword ptr [r15 + 0x28], rdx
0x2271:   48 b8 5f 4d 41 58 42 55 46 00   	movabs rax, 0x46554258414d5f
0x227b:   49 89 47 30                     	mov qword ptr [r15 + 0x30], rax
0x227f:   44 89 e7                        	mov edi, r12d
0x2282:   e8 19 ee ff ff                  	call 0x10a0 <close>
0x2287:   b8 ff ff ff ff                  	mov eax, 0xffffffff
0x228c:   e9 5f 03 00 00                  	jmp 0x25f0 <submitr+0x690>
0x2291:   49 0f a3 c5                     	bt r13, rax
0x2295:   73 21                           	jae 0x22b8 <submitr+0x358>
0x2297:   44 88 45 00                     	mov byte ptr [rbp], r8b
0x229b:   48 8d 6d 01                     	lea rbp, [rbp + 1]
0x229f:   48 83 c3 01                     	add rbx, 1
0x22a3:   4c 39 f3                        	cmp rbx, r14
0x22a6:   0f 84 6d 04 00 00               	je 0x2719 <submitr+0x7b9>
0x22ac:   44 0f b6 03                     	movzx r8d, byte ptr [rbx]
0x22b0:   41 8d 40 d6                     	lea eax, [r8 - 0x2a]
0x22b4:   3c 35                           	cmp al, 0x35
0x22b6:   76 d9                           	jbe 0x2291 <submitr+0x331>
0x22b8:   44 89 c0                        	mov eax, r8d
0x22bb:   83 e0 df                        	and eax, 0xffffffdf
0x22be:   83 e8 41                        	sub eax, 0x41
0x22c1:   3c 19                           	cmp al, 0x19
0x22c3:   76 d2                           	jbe 0x2297 <submitr+0x337>
0x22c5:   41 80 f8 20                     	cmp r8b, 0x20
0x22c9:   74 60                           	je 0x232b <submitr+0x3cb>
0x22cb:   41 8d 40 e0                     	lea eax, [r8 - 0x20]
0x22cf:   3c 5f                           	cmp al, 0x5f
0x22d1:   76 0a                           	jbe 0x22dd <submitr+0x37d>
0x22d3:   41 80 f8 09                     	cmp r8b, 9
0x22d7:   0f 85 af 03 00 00               	jne 0x268c <submitr+0x72c>
0x22dd:   45 0f b6 c0                     	movzx r8d, r8b
0x22e1:   48 8d 0d 7e 12 00 00            	lea rcx, [rip + 0x127e]
0x22e8:   ba 08 00 00 00                  	mov edx, 8
0x22ed:   be 01 00 00 00                  	mov esi, 1
0x22f2:   48 8b 7c 24 28                  	mov rdi, qword ptr [rsp + 0x28]
0x22f7:   b8 00 00 00 00                  	mov eax, 0
0x22fc:   e8 9f ee ff ff                  	call 0x11a0 <__sprintf_chk>
0x2301:   0f b6 84 24 60 80 00 00         	movzx eax, byte ptr [rsp + 0x8060]
0x2309:   88 45 00                        	mov byte ptr [rbp], al
0x230c:   0f b6 84 24 61 80 00 00         	movzx eax, byte ptr [rsp + 0x8061]
0x2314:   88 45 01                        	mov byte ptr [rbp + 1], al
0x2317:   0f b6 84 24 62 80 00 00         	movzx eax, byte ptr [rsp + 0x8062]
0x231f:   88 45 02                        	mov byte ptr [rbp + 2], al
0x2322:   48 8d 6d 03                     	lea rbp, [rbp + 3]
0x2326:   e9 74 ff ff ff                  	jmp 0x229f <submitr+0x33f>
0x232b:   c6 45 00 2b                     	mov byte ptr [rbp], 0x2b
0x232f:   48 8d 6d 01                     	lea rbp, [rbp + 1]
0x2333:   e9 67 ff ff ff                  	jmp 0x229f <submitr+0x33f>
0x2338:   49 01 c5                        	add r13, rax
0x233b:   48 29 c5                        	sub rbp, rax
0x233e:   74 26                           	je 0x2366 <submitr+0x406>
0x2340:   48 89 ea                        	mov rdx, rbp
0x2343:   4c 89 ee                        	mov rsi, r13
0x2346:   44 89 e7                        	mov edi, r12d
0x2349:   e8 22 ed ff ff                  	call 0x1070 <write>
0x234e:   48 85 c0                        	test rax, rax
0x2351:   7f e5                           	jg 0x2338 <submitr+0x3d8>
0x2353:   e8 e8 ec ff ff                  	call 0x1040 <__errno_location>
0x2358:   83 38 04                        	cmp dword ptr [rax], 4
0x235b:   0f 85 31 01 00 00               	jne 0x2492 <submitr+0x532>
0x2361:   4c 89 f0                        	mov rax, r14
0x2364:   eb d2                           	jmp 0x2338 <submitr+0x3d8>
0x2366:   48 85 db                        	test rbx, rbx
0x2369:   0f 88 23 01 00 00               	js 0x2492 <submitr+0x532>
0x236f:   44 89 64 24 50                  	mov dword ptr [rsp + 0x50], r12d
0x2374:   c7 44 24 54 00 00 00 00         	mov dword ptr [rsp + 0x54], 0
0x237c:   48 8d 7c 24 50                  	lea rdi, [rsp + 0x50]
0x2381:   48 8d 47 10                     	lea rax, [rdi + 0x10]
0x2385:   48 89 44 24 58                  	mov qword ptr [rsp + 0x58], rax
0x238a:   48 8d b4 24 60 20 00 00         	lea rsi, [rsp + 0x2060]
0x2392:   ba 00 20 00 00                  	mov edx, 0x2000
0x2397:   e8 08 fb ff ff                  	call 0x1ea4 <rio_readlineb>
0x239c:   48 85 c0                        	test rax, rax
0x239f:   0f 8e 4c 01 00 00               	jle 0x24f1 <submitr+0x591>
0x23a5:   48 8d 4c 24 3c                  	lea rcx, [rsp + 0x3c]
0x23aa:   48 8d 94 24 60 60 00 00         	lea rdx, [rsp + 0x6060]
0x23b2:   48 8d bc 24 60 20 00 00         	lea rdi, [rsp + 0x2060]
0x23ba:   4c 8d 84 24 60 80 00 00         	lea r8, [rsp + 0x8060]
0x23c2:   48 8d 35 a4 11 00 00            	lea rsi, [rip + 0x11a4]
0x23c9:   b8 00 00 00 00                  	mov eax, 0
0x23ce:   e8 4d ed ff ff                  	call 0x1120 <sscanf>
0x23d3:   44 8b 44 24 3c                  	mov r8d, dword ptr [rsp + 0x3c]
0x23d8:   41 81 f8 c8 00 00 00            	cmp r8d, 0xc8
0x23df:   0f 85 80 01 00 00               	jne 0x2565 <submitr+0x605>
0x23e5:   48 8d 9c 24 60 20 00 00         	lea rbx, [rsp + 0x2060]
0x23ed:   48 8d 2d 8a 11 00 00            	lea rbp, [rip + 0x118a]
0x23f4:   4c 8d 6c 24 50                  	lea r13, [rsp + 0x50]
0x23f9:   b9 03 00 00 00                  	mov ecx, 3
0x23fe:   48 89 de                        	mov rsi, rbx
0x2401:   48 89 ef                        	mov rdi, rbp
0x2404:   f3 a6                           	repe cmpsb byte ptr [rsi], byte ptr [rdi]
0x2406:   0f 97 c0                        	seta al
0x2409:   1c 00                           	sbb al, 0
0x240b:   84 c0                           	test al, al
0x240d:   0f 84 89 01 00 00               	je 0x259c <submitr+0x63c>
0x2413:   ba 00 20 00 00                  	mov edx, 0x2000
0x2418:   48 89 de                        	mov rsi, rbx
0x241b:   4c 89 ef                        	mov rdi, r13
0x241e:   e8 81 fa ff ff                  	call 0x1ea4 <rio_readlineb>
0x2423:   48 85 c0                        	test rax, rax
0x2426:   7f d1                           	jg 0x23f9 <submitr+0x499>
0x2428:   48 b8 45 72 72 6f 72 3a 20 43   	movabs rax, 0x43203a726f727245
0x2432:   48 ba 6c 69 65 6e 74 20 75 6e   	movabs rdx, 0x6e7520746e65696c
0x243c:   49 89 07                        	mov qword ptr [r15], rax
0x243f:   49 89 57 08                     	mov qword ptr [r15 + 8], rdx
0x2443:   48 b8 61 62 6c 65 20 74 6f 20   	movabs rax, 0x206f7420656c6261
0x244d:   48 ba 72 65 61 64 20 68 65 61   	movabs rdx, 0x6165682064616572
0x2457:   49 89 47 10                     	mov qword ptr [r15 + 0x10], rax
0x245b:   49 89 57 18                     	mov qword ptr [r15 + 0x18], rdx
0x245f:   48 b8 64 65 72 73 20 66 72 6f   	movabs rax, 0x6f72662073726564
0x2469:   48 ba 6d 20 73 65 72 76 65 72   	movabs rdx, 0x726576726573206d
0x2473:   49 89 47 20                     	mov qword ptr [r15 + 0x20], rax
0x2477:   49 89 57 28                     	mov qword ptr [r15 + 0x28], rdx
0x247b:   41 c6 47 30 00                  	mov byte ptr [r15 + 0x30], 0
0x2480:   44 89 e7                        	mov edi, r12d
0x2483:   e8 18 ec ff ff                  	call 0x10a0 <close>
0x2488:   b8 ff ff ff ff                  	mov eax, 0xffffffff
0x248d:   e9 5e 01 00 00                  	jmp 0x25f0 <submitr+0x690>
0x2492:   48 b8 45 72 72 6f 72 3a 20 43   	movabs rax, 0x43203a726f727245
0x249c:   48 ba 6c 69 65 6e 74 20 75 6e   	movabs rdx, 0x6e7520746e65696c
0x24a6:   49 89 07                        	mov qword ptr [r15], rax
0x24a9:   49 89 57 08                     	mov qword ptr [r15 + 8], rdx
0x24ad:   48 b8 61 62 6c 65 20 74 6f 20   	movabs rax, 0x206f7420656c6261
0x24b7:   48 ba 77 72 69 74 65 20 74 6f   	movabs rdx, 0x6f74206574697277
0x24c1:   49 89 47 10                     	mov qword ptr [r15 + 0x10], rax
0x24c5:   49 89 57 18                     	mov qword ptr [r15 + 0x18], rdx
0x24c9:   48 b8 20 74 68 65 20 73 65 72   	movabs rax, 0x7265732065687420
0x24d3:   49 89 47 20                     	mov qword ptr [r15 + 0x20], rax
0x24d7:   41 c7 47 28 76 65 72 00         	mov dword ptr [r15 + 0x28], 0x726576
0x24df:   44 89 e7                        	mov edi, r12d
0x24e2:   e8 b9 eb ff ff                  	call 0x10a0 <close>
0x24e7:   b8 ff ff ff ff                  	mov eax, 0xffffffff
0x24ec:   e9 ff 00 00 00                  	jmp 0x25f0 <submitr+0x690>
0x24f1:   48 b8 45 72 72 6f 72 3a 20 43   	movabs rax, 0x43203a726f727245
0x24fb:   48 ba 6c 69 65 6e 74 20 75 6e   	movabs rdx, 0x6e7520746e65696c
0x2505:   49 89 07                        	mov qword ptr [r15], rax
0x2508:   49 89 57 08                     	mov qword ptr [r15 + 8], rdx
0x250c:   48 b8 61 62 6c 65 20 74 6f 20   	movabs rax, 0x206f7420656c6261
0x2516:   48 ba 72 65 61 64 20 66 69 72   	movabs rdx, 0x7269662064616572
0x2520:   49 89 47 10                     	mov qword ptr [r15 + 0x10], rax
0x2524:   49 89 57 18                     	mov qword ptr [r15 + 0x18], rdx
0x2528:   48 b8 73 74 20 68 65 61 64 65   	movabs rax, 0x6564616568207473
0x2532:   48 ba 72 20 66 72 6f 6d 20 73   	movabs rdx, 0x73206d6f72662072
0x253c:   49 89 47 20                     	mov qword ptr [r15 + 0x20], rax
0x2540:   49 89 57 28                     	mov qword ptr [r15 + 0x28], rdx
0x2544:   41 c7 47 30 65 72 76 65         	mov dword ptr [r15 + 0x30], 0x65767265
0x254c:   66 41 c7 47 34 72 00            	mov word ptr [r15 + 0x34], 0x72
0x2553:   44 89 e7                        	mov edi, r12d
0x2556:   e8 45 eb ff ff                  	call 0x10a0 <close>
0x255b:   b8 ff ff ff ff                  	mov eax, 0xffffffff
0x2560:   e9 8b 00 00 00                  	jmp 0x25f0 <submitr+0x690>
0x2565:   4c 8d 8c 24 60 80 00 00         	lea r9, [rsp + 0x8060]
0x256d:   48 8d 0d 44 0f 00 00            	lea rcx, [rip + 0xf44]
0x2574:   48 c7 c2 ff ff ff ff            	mov rdx, 0xffffffffffffffff
0x257b:   be 01 00 00 00                  	mov esi, 1
0x2580:   4c 89 ff                        	mov rdi, r15
0x2583:   b8 00 00 00 00                  	mov eax, 0
0x2588:   e8 13 ec ff ff                  	call 0x11a0 <__sprintf_chk>
0x258d:   44 89 e7                        	mov edi, r12d
0x2590:   e8 0b eb ff ff                  	call 0x10a0 <close>
0x2595:   b8 ff ff ff ff                  	mov eax, 0xffffffff
0x259a:   eb 54                           	jmp 0x25f0 <submitr+0x690>
0x259c:   48 8d b4 24 60 20 00 00         	lea rsi, [rsp + 0x2060]
0x25a4:   48 8d 7c 24 50                  	lea rdi, [rsp + 0x50]
0x25a9:   ba 00 20 00 00                  	mov edx, 0x2000
0x25ae:   e8 f1 f8 ff ff                  	call 0x1ea4 <rio_readlineb>
0x25b3:   48 85 c0                        	test rax, rax
0x25b6:   7e 61                           	jle 0x2619 <submitr+0x6b9>
0x25b8:   48 8d b4 24 60 20 00 00         	lea rsi, [rsp + 0x2060]
0x25c0:   4c 89 ff                        	mov rdi, r15
0x25c3:   e8 88 ea ff ff                  	call 0x1050 <strcpy>
0x25c8:   44 89 e7                        	mov edi, r12d
0x25cb:   e8 d0 ea ff ff                  	call 0x10a0 <close>
0x25d0:   b9 03 00 00 00                  	mov ecx, 3
0x25d5:   48 8d 3d a5 0f 00 00            	lea rdi, [rip + 0xfa5]
0x25dc:   4c 89 fe                        	mov rsi, r15
0x25df:   f3 a6                           	repe cmpsb byte ptr [rsi], byte ptr [rdi]
0x25e1:   0f 97 c0                        	seta al
0x25e4:   1c 00                           	sbb al, 0
0x25e6:   84 c0                           	test al, al
0x25e8:   0f 95 c0                        	setne al
0x25eb:   0f b6 c0                        	movzx eax, al
0x25ee:   f7 d8                           	neg eax
0x25f0:   48 8b 94 24 68 a0 00 00         	mov rdx, qword ptr [rsp + 0xa068]
0x25f8:   64 48 33 14 25 28 00 00 00      	xor rdx, qword ptr fs:[0x28]
0x2601:   0f 85 95 01 00 00               	jne 0x279c <submitr+0x83c>
0x2607:   48 81 c4 78 a0 00 00            	add rsp, 0xa078
0x260e:   5b                              	pop rbx
0x260f:   5d                              	pop rbp
0x2610:   41 5c                           	pop r12
0x2612:   41 5d                           	pop r13
0x2614:   41 5e                           	pop r14
0x2616:   41 5f                           	pop r15
0x2618:   c3                              	ret 
0x2619:   48 b8 45 72 72 6f 72 3a 20 43   	movabs rax, 0x43203a726f727245
0x2623:   48 ba 6c 69 65 6e 74 20 75 6e   	movabs rdx, 0x6e7520746e65696c
0x262d:   49 89 07                        	mov qword ptr [r15], rax
0x2630:   49 89 57 08                     	mov qword ptr [r15 + 8], rdx
0x2634:   48 b8 61 62 6c 65 20 74 6f 20   	movabs rax, 0x206f7420656c6261
0x263e:   48 ba 72 65 61 64 20 73 74 61   	movabs rdx, 0x6174732064616572
0x2648:   49 89 47 10                     	mov qword ptr [r15 + 0x10], rax
0x264c:   49 89 57 18                     	mov qword ptr [r15 + 0x18], rdx
0x2650:   48 b8 74 75 73 20 6d 65 73 73   	movabs rax, 0x7373656d20737574
0x265a:   48 ba 61 67 65 20 66 72 6f 6d   	movabs rdx, 0x6d6f726620656761
0x2664:   49 89 47 20                     	mov qword ptr [r15 + 0x20], rax
0x2668:   49 89 57 28                     	mov qword ptr [r15 + 0x28], rdx
0x266c:   48 b8 20 73 65 72 76 65 72 00   	movabs rax, 0x72657672657320
0x2676:   49 89 47 30                     	mov qword ptr [r15 + 0x30], rax
0x267a:   44 89 e7                        	mov edi, r12d
0x267d:   e8 1e ea ff ff                  	call 0x10a0 <close>
0x2682:   b8 ff ff ff ff                  	mov eax, 0xffffffff
0x2687:   e9 64 ff ff ff                  	jmp 0x25f0 <submitr+0x690>
0x268c:   48 b8 45 72 72 6f 72 3a 20 52   	movabs rax, 0x52203a726f727245
0x2696:   48 ba 65 73 75 6c 74 20 73 74   	movabs rdx, 0x747320746c757365
0x26a0:   49 89 07                        	mov qword ptr [r15], rax
0x26a3:   49 89 57 08                     	mov qword ptr [r15 + 8], rdx
0x26a7:   48 b8 72 69 6e 67 20 63 6f 6e   	movabs rax, 0x6e6f6320676e6972
0x26b1:   48 ba 74 61 69 6e 73 20 61 6e   	movabs rdx, 0x6e6120736e696174
0x26bb:   49 89 47 10                     	mov qword ptr [r15 + 0x10], rax
0x26bf:   49 89 57 18                     	mov qword ptr [r15 + 0x18], rdx
0x26c3:   48 b8 20 69 6c 6c 65 67 61 6c   	movabs rax, 0x6c6167656c6c6920
0x26cd:   48 ba 20 6f 72 20 75 6e 70 72   	movabs rdx, 0x72706e7520726f20
0x26d7:   49 89 47 20                     	mov qword ptr [r15 + 0x20], rax
0x26db:   49 89 57 28                     	mov qword ptr [r15 + 0x28], rdx
0x26df:   48 b8 69 6e 74 61 62 6c 65 20   	movabs rax, 0x20656c6261746e69
0x26e9:   48 ba 63 68 61 72 61 63 74 65   	movabs rdx, 0x6574636172616863
0x26f3:   49 89 47 30                     	mov qword ptr [r15 + 0x30], rax
0x26f7:   49 89 57 38                     	mov qword ptr [r15 + 0x38], rdx
0x26fb:   66 41 c7 47 40 72 2e            	mov word ptr [r15 + 0x40], 0x2e72
0x2702:   41 c6 47 42 00                  	mov byte ptr [r15 + 0x42], 0
0x2707:   44 89 e7                        	mov edi, r12d
0x270a:   e8 91 e9 ff ff                  	call 0x10a0 <close>
0x270f:   b8 ff ff ff ff                  	mov eax, 0xffffffff
0x2714:   e9 d7 fe ff ff                  	jmp 0x25f0 <submitr+0x690>
0x2719:   48 8d 9c 24 60 20 00 00         	lea rbx, [rsp + 0x2060]
0x2721:   48 83 ec 08                     	sub rsp, 8
0x2725:   48 8d 84 24 68 40 00 00         	lea rax, [rsp + 0x4068]
0x272d:   50                              	push rax
0x272e:   ff 74 24 28                     	push qword ptr [rsp + 0x28]
0x2732:   ff 74 24 38                     	push qword ptr [rsp + 0x38]
0x2736:   4c 8b 4c 24 30                  	mov r9, qword ptr [rsp + 0x30]
0x273b:   4c 8b 44 24 28                  	mov r8, qword ptr [rsp + 0x28]
0x2740:   48 8d 0d a1 0d 00 00            	lea rcx, [rip + 0xda1]
0x2747:   ba 00 20 00 00                  	mov edx, 0x2000
0x274c:   be 01 00 00 00                  	mov esi, 1
0x2751:   48 89 df                        	mov rdi, rbx
0x2754:   b8 00 00 00 00                  	mov eax, 0
0x2759:   e8 42 ea ff ff                  	call 0x11a0 <__sprintf_chk>
0x275e:   48 c7 c1 ff ff ff ff            	mov rcx, 0xffffffffffffffff
0x2765:   b8 00 00 00 00                  	mov eax, 0
0x276a:   48 89 df                        	mov rdi, rbx
0x276d:   f2 ae                           	repne scasb al, byte ptr [rdi]
0x276f:   48 f7 d1                        	not rcx
0x2772:   48 89 cb                        	mov rbx, rcx
0x2775:   48 83 eb 01                     	sub rbx, 1
0x2779:   48 83 c4 20                     	add rsp, 0x20
0x277d:   48 89 dd                        	mov rbp, rbx
0x2780:   4c 8d ac 24 60 20 00 00         	lea r13, [rsp + 0x2060]
0x2788:   41 be 00 00 00 00               	mov r14d, 0
0x278e:   48 85 db                        	test rbx, rbx
0x2791:   0f 85 a9 fb ff ff               	jne 0x2340 <submitr+0x3e0>
0x2797:   e9 d3 fb ff ff                  	jmp 0x236f <submitr+0x40f>
0x279c:   e8 df e8 ff ff                  	call 0x1080 <__stack_chk_fail>
; function: init_timeout at 0x27a1 -- 0x27cc
0x27a1:   85 ff                           	test edi, edi
0x27a3:   74 25                           	je 0x27ca <init_timeout+0x29>
0x27a5:   53                              	push rbx
0x27a6:   89 fb                           	mov ebx, edi
0x27a8:   48 8d 35 c5 f6 ff ff            	lea rsi, [rip - 0x93b]
0x27af:   bf 0e 00 00 00                  	mov edi, 0xe
0x27b4:   e8 17 e9 ff ff                  	call 0x10d0 <signal>
0x27b9:   85 db                           	test ebx, ebx
0x27bb:   bf 00 00 00 00                  	mov edi, 0
0x27c0:   0f 49 fb                        	cmovns edi, ebx
0x27c3:   e8 c8 e8 ff ff                  	call 0x1090 <alarm>
0x27c8:   5b                              	pop rbx
0x27c9:   c3                              	ret 
0x27ca:   f3 c3                           	ret 
; function: init_driver at 0x27cc -- 0x29d5
0x27cc:   41 54                           	push r12
0x27ce:   55                              	push rbp
0x27cf:   53                              	push rbx
0x27d0:   48 83 ec 20                     	sub rsp, 0x20
0x27d4:   49 89 fc                        	mov r12, rdi
0x27d7:   64 48 8b 04 25 28 00 00 00      	mov rax, qword ptr fs:[0x28]
0x27e0:   48 89 44 24 18                  	mov qword ptr [rsp + 0x18], rax
0x27e5:   31 c0                           	xor eax, eax
0x27e7:   be 01 00 00 00                  	mov esi, 1
0x27ec:   bf 0d 00 00 00                  	mov edi, 0xd
0x27f1:   e8 da e8 ff ff                  	call 0x10d0 <signal>
0x27f6:   be 01 00 00 00                  	mov esi, 1
0x27fb:   bf 1d 00 00 00                  	mov edi, 0x1d
0x2800:   e8 cb e8 ff ff                  	call 0x10d0 <signal>
0x2805:   be 01 00 00 00                  	mov esi, 1
0x280a:   bf 1d 00 00 00                  	mov edi, 0x1d
0x280f:   e8 bc e8 ff ff                  	call 0x10d0 <signal>
0x2814:   ba 00 00 00 00                  	mov edx, 0
0x2819:   be 01 00 00 00                  	mov esi, 1
0x281e:   bf 02 00 00 00                  	mov edi, 2
0x2823:   e8 88 e9 ff ff                  	call 0x11b0 <socket>
0x2828:   85 c0                           	test eax, eax
0x282a:   0f 88 a3 00 00 00               	js 0x28d3 <init_driver+0x107>
0x2830:   89 c3                           	mov ebx, eax
0x2832:   48 8d 3d 4b 0d 00 00            	lea rdi, [rip + 0xd4b]
0x2839:   e8 a2 e8 ff ff                  	call 0x10e0 <gethostbyname>
0x283e:   48 85 c0                        	test rax, rax
0x2841:   0f 84 df 00 00 00               	je 0x2926 <init_driver+0x15a>
0x2847:   48 89 e5                        	mov rbp, rsp
0x284a:   48 c7 44 24 02 00 00 00 00      	mov qword ptr [rsp + 2], 0
0x2853:   c7 45 0a 00 00 00 00            	mov dword ptr [rbp + 0xa], 0
0x285a:   66 c7 45 0e 00 00               	mov word ptr [rbp + 0xe], 0
0x2860:   66 c7 04 24 02 00               	mov word ptr [rsp], 2
0x2866:   48 63 50 14                     	movsxd rdx, dword ptr [rax + 0x14]
0x286a:   48 8b 40 18                     	mov rax, qword ptr [rax + 0x18]
0x286e:   48 8d 7d 04                     	lea rdi, [rbp + 4]
0x2872:   b9 0c 00 00 00                  	mov ecx, 0xc
0x2877:   48 8b 30                        	mov rsi, qword ptr [rax]
0x287a:   e8 71 e8 ff ff                  	call 0x10f0 <__memmove_chk>
0x287f:   66 c7 44 24 02 3b 6e            	mov word ptr [rsp + 2], 0x6e3b
0x2886:   ba 10 00 00 00                  	mov edx, 0x10
0x288b:   48 89 ee                        	mov rsi, rbp
0x288e:   89 df                           	mov edi, ebx
0x2890:   e8 cb e8 ff ff                  	call 0x1160 <connect>
0x2895:   85 c0                           	test eax, eax
0x2897:   0f 88 fb 00 00 00               	js 0x2998 <init_driver+0x1cc>
0x289d:   89 df                           	mov edi, ebx
0x289f:   e8 fc e7 ff ff                  	call 0x10a0 <close>
0x28a4:   66 41 c7 04 24 4f 4b            	mov word ptr [r12], 0x4b4f
0x28ab:   41 c6 44 24 02 00               	mov byte ptr [r12 + 2], 0
0x28b1:   b8 00 00 00 00                  	mov eax, 0
0x28b6:   48 8b 4c 24 18                  	mov rcx, qword ptr [rsp + 0x18]
0x28bb:   64 48 33 0c 25 28 00 00 00      	xor rcx, qword ptr fs:[0x28]
0x28c4:   0f 85 06 01 00 00               	jne 0x29d0 <init_driver+0x204>
0x28ca:   48 83 c4 20                     	add rsp, 0x20
0x28ce:   5b                              	pop rbx
0x28cf:   5d                              	pop rbp
0x28d0:   41 5c                           	pop r12
0x28d2:   c3                              	ret 
0x28d3:   48 b8 45 72 72 6f 72 3a 20 43   	movabs rax, 0x43203a726f727245
0x28dd:   48 ba 6c 69 65 6e 74 20 75 6e   	movabs rdx, 0x6e7520746e65696c
0x28e7:   49 89 04 24                     	mov qword ptr [r12], rax
0x28eb:   49 89 54 24 08                  	mov qword ptr [r12 + 8], rdx
0x28f0:   48 b8 61 62 6c 65 20 74 6f 20   	movabs rax, 0x206f7420656c6261
0x28fa:   48 ba 63 72 65 61 74 65 20 73   	movabs rdx, 0x7320657461657263
0x2904:   49 89 44 24 10                  	mov qword ptr [r12 + 0x10], rax
0x2909:   49 89 54 24 18                  	mov qword ptr [r12 + 0x18], rdx
0x290e:   41 c7 44 24 20 6f 63 6b 65      	mov dword ptr [r12 + 0x20], 0x656b636f
0x2917:   66 41 c7 44 24 24 74 00         	mov word ptr [r12 + 0x24], 0x74
0x291f:   b8 ff ff ff ff                  	mov eax, 0xffffffff
0x2924:   eb 90                           	jmp 0x28b6 <init_driver+0xea>
0x2926:   48 b8 45 72 72 6f 72 3a 20 44   	movabs rax, 0x44203a726f727245
0x2930:   48 ba 4e 53 20 69 73 20 75 6e   	movabs rdx, 0x6e7520736920534e
0x293a:   49 89 04 24                     	mov qword ptr [r12], rax
0x293e:   49 89 54 24 08                  	mov qword ptr [r12 + 8], rdx
0x2943:   48 b8 61 62 6c 65 20 74 6f 20   	movabs rax, 0x206f7420656c6261
0x294d:   48 ba 72 65 73 6f 6c 76 65 20   	movabs rdx, 0x2065766c6f736572
0x2957:   49 89 44 24 10                  	mov qword ptr [r12 + 0x10], rax
0x295c:   49 89 54 24 18                  	mov qword ptr [r12 + 0x18], rdx
0x2961:   48 b8 73 65 72 76 65 72 20 61   	movabs rax, 0x6120726576726573
0x296b:   49 89 44 24 20                  	mov qword ptr [r12 + 0x20], rax
0x2970:   41 c7 44 24 28 64 64 72 65      	mov dword ptr [r12 + 0x28], 0x65726464
0x2979:   66 41 c7 44 24 2c 73 73         	mov word ptr [r12 + 0x2c], 0x7373
0x2981:   41 c6 44 24 2e 00               	mov byte ptr [r12 + 0x2e], 0
0x2987:   89 df                           	mov edi, ebx
0x2989:   e8 12 e7 ff ff                  	call 0x10a0 <close>
0x298e:   b8 ff ff ff ff                  	mov eax, 0xffffffff
0x2993:   e9 1e ff ff ff                  	jmp 0x28b6 <init_driver+0xea>
0x2998:   4c 8d 05 e5 0b 00 00            	lea r8, [rip + 0xbe5]
0x299f:   48 8d 0d 9a 0b 00 00            	lea rcx, [rip + 0xb9a]
0x29a6:   48 c7 c2 ff ff ff ff            	mov rdx, 0xffffffffffffffff
0x29ad:   be 01 00 00 00                  	mov esi, 1
0x29b2:   4c 89 e7                        	mov rdi, r12
0x29b5:   b8 00 00 00 00                  	mov eax, 0
0x29ba:   e8 e1 e7 ff ff                  	call 0x11a0 <__sprintf_chk>
0x29bf:   89 df                           	mov edi, ebx
0x29c1:   e8 da e6 ff ff                  	call 0x10a0 <close>
0x29c6:   b8 ff ff ff ff                  	mov eax, 0xffffffff
0x29cb:   e9 e6 fe ff ff                  	jmp 0x28b6 <init_driver+0xea>
0x29d0:   e8 ab e6 ff ff                  	call 0x1080 <__stack_chk_fail>
; function: driver_ping at 0x29d5 -- 0x2ab7
0x29d5:   55                              	push rbp
0x29d6:   53                              	push rbx
0x29d7:   48 83 ec 28                     	sub rsp, 0x28
0x29db:   64 48 8b 04 25 28 00 00 00      	mov rax, qword ptr fs:[0x28]
0x29e4:   48 89 44 24 18                  	mov qword ptr [rsp + 0x18], rax
0x29e9:   31 c0                           	xor eax, eax
0x29eb:   ba 00 00 00 00                  	mov edx, 0
0x29f0:   be 01 00 00 00                  	mov esi, 1
0x29f5:   bf 02 00 00 00                  	mov edi, 2
0x29fa:   e8 b1 e7 ff ff                  	call 0x11b0 <socket>
0x29ff:   85 c0                           	test eax, eax
0x2a01:   0f 88 a4 00 00 00               	js 0x2aab <driver_ping+0xd6>
0x2a07:   89 c3                           	mov ebx, eax
0x2a09:   48 8d 3d 74 0b 00 00            	lea rdi, [rip + 0xb74]
0x2a10:   e8 cb e6 ff ff                  	call 0x10e0 <gethostbyname>
0x2a15:   48 85 c0                        	test rax, rax
0x2a18:   74 75                           	je 0x2a8f <driver_ping+0xba>
0x2a1a:   48 89 e5                        	mov rbp, rsp
0x2a1d:   48 c7 44 24 02 00 00 00 00      	mov qword ptr [rsp + 2], 0
0x2a26:   c7 45 0a 00 00 00 00            	mov dword ptr [rbp + 0xa], 0
0x2a2d:   66 c7 45 0e 00 00               	mov word ptr [rbp + 0xe], 0
0x2a33:   66 c7 04 24 02 00               	mov word ptr [rsp], 2
0x2a39:   48 63 50 14                     	movsxd rdx, dword ptr [rax + 0x14]
0x2a3d:   48 8b 40 18                     	mov rax, qword ptr [rax + 0x18]
0x2a41:   48 8d 7d 04                     	lea rdi, [rbp + 4]
0x2a45:   b9 0c 00 00 00                  	mov ecx, 0xc
0x2a4a:   48 8b 30                        	mov rsi, qword ptr [rax]
0x2a4d:   e8 9e e6 ff ff                  	call 0x10f0 <__memmove_chk>
0x2a52:   66 c7 44 24 02 3b 6e            	mov word ptr [rsp + 2], 0x6e3b
0x2a59:   ba 10 00 00 00                  	mov edx, 0x10
0x2a5e:   48 89 ee                        	mov rsi, rbp
0x2a61:   89 df                           	mov edi, ebx
0x2a63:   e8 f8 e6 ff ff                  	call 0x1160 <connect>
0x2a68:   85 c0                           	test eax, eax
0x2a6a:   78 31                           	js 0x2a9d <driver_ping+0xc8>
0x2a6c:   89 df                           	mov edi, ebx
0x2a6e:   e8 2d e6 ff ff                  	call 0x10a0 <close>
0x2a73:   b8 00 00 00 00                  	mov eax, 0
0x2a78:   48 8b 4c 24 18                  	mov rcx, qword ptr [rsp + 0x18]
0x2a7d:   64 48 33 0c 25 28 00 00 00      	xor rcx, qword ptr fs:[0x28]
0x2a86:   75 2a                           	jne 0x2ab2 <driver_ping+0xdd>
0x2a88:   48 83 c4 28                     	add rsp, 0x28
0x2a8c:   5b                              	pop rbx
0x2a8d:   5d                              	pop rbp
0x2a8e:   c3                              	ret 
0x2a8f:   89 df                           	mov edi, ebx
0x2a91:   e8 0a e6 ff ff                  	call 0x10a0 <close>
0x2a96:   b8 ff ff ff ff                  	mov eax, 0xffffffff
0x2a9b:   eb db                           	jmp 0x2a78 <driver_ping+0xa3>
0x2a9d:   89 df                           	mov edi, ebx
0x2a9f:   e8 fc e5 ff ff                  	call 0x10a0 <close>
0x2aa4:   b8 ff ff ff ff                  	mov eax, 0xffffffff
0x2aa9:   eb cd                           	jmp 0x2a78 <driver_ping+0xa3>
0x2aab:   b8 ff ff ff ff                  	mov eax, 0xffffffff
0x2ab0:   eb c6                           	jmp 0x2a78 <driver_ping+0xa3>
0x2ab2:   e8 c9 e5 ff ff                  	call 0x1080 <__stack_chk_fail>
; function: driver_post at 0x2ab7 -- 0x2b2a
0x2ab7:   53                              	push rbx
0x2ab8:   4c 89 c3                        	mov rbx, r8
0x2abb:   85 c9                           	test ecx, ecx
0x2abd:   75 17                           	jne 0x2ad6 <driver_post+0x1f>
0x2abf:   48 85 ff                        	test rdi, rdi
0x2ac2:   74 05                           	je 0x2ac9 <driver_post+0x12>
0x2ac4:   80 3f 00                        	cmp byte ptr [rdi], 0
0x2ac7:   75 33                           	jne 0x2afc <driver_post+0x45>
0x2ac9:   66 c7 03 4f 4b                  	mov word ptr [rbx], 0x4b4f
0x2ace:   c6 43 02 00                     	mov byte ptr [rbx + 2], 0
0x2ad2:   89 c8                           	mov eax, ecx
0x2ad4:   5b                              	pop rbx
0x2ad5:   c3                              	ret 
0x2ad6:   48 8d 35 b7 0a 00 00            	lea rsi, [rip + 0xab7]
0x2add:   bf 01 00 00 00                  	mov edi, 1
0x2ae2:   b8 00 00 00 00                  	mov eax, 0
0x2ae7:   e8 44 e6 ff ff                  	call 0x1130 <__printf_chk>
0x2aec:   66 c7 03 4f 4b                  	mov word ptr [rbx], 0x4b4f
0x2af1:   c6 43 02 00                     	mov byte ptr [rbx + 2], 0
0x2af5:   b8 00 00 00 00                  	mov eax, 0
0x2afa:   eb d8                           	jmp 0x2ad4 <driver_post+0x1d>
0x2afc:   41 50                           	push r8
0x2afe:   52                              	push rdx
0x2aff:   4c 8d 0d a5 0a 00 00            	lea r9, [rip + 0xaa5]
0x2b06:   49 89 f0                        	mov r8, rsi
0x2b09:   48 89 f9                        	mov rcx, rdi
0x2b0c:   48 8d 15 a5 0a 00 00            	lea rdx, [rip + 0xaa5]
0x2b13:   be 6e 3b 00 00                  	mov esi, 0x3b6e
0x2b18:   48 8d 3d 65 0a 00 00            	lea rdi, [rip + 0xa65]
0x2b1f:   e8 3c f4 ff ff                  	call 0x1f60 <submitr>
0x2b24:   48 83 c4 10                     	add rsp, 0x10
0x2b28:   eb aa                           	jmp 0x2ad4 <driver_post+0x1d>
; data inside code section at 0x2b2a -- 0x2b30
0x2b2a:   66 0f 1f 44 00 00                                  |f..D..          |
; function: __libc_csu_init at 0x2b30 -- 0x2b95
0x2b30:   f3 0f 1e fa                     	endbr64 
0x2b34:   41 57                           	push r15
0x2b36:   4c 8d 3d bb 21 00 00            	lea r15, [rip + 0x21bb]
0x2b3d:   41 56                           	push r14
0x2b3f:   49 89 d6                        	mov r14, rdx
0x2b42:   41 55                           	push r13
0x2b44:   49 89 f5                        	mov r13, rsi
0x2b47:   41 54                           	push r12
0x2b49:   41 89 fc                        	mov r12d, edi
0x2b4c:   55                              	push rbp
0x2b4d:   48 8d 2d ac 21 00 00            	lea rbp, [rip + 0x21ac]
0x2b54:   53                              	push rbx
0x2b55:   4c 29 fd                        	sub rbp, r15
0x2b58:   48 83 ec 08                     	sub rsp, 8
0x2b5c:   e8 9f e4 ff ff                  	call 0x1000 <_init>
0x2b61:   48 c1 fd 03                     	sar rbp, 3
0x2b65:   74 1f                           	je 0x2b86 <__libc_csu_init+0x56>
0x2b67:   31 db                           	xor ebx, ebx
0x2b69:   0f 1f 80 00 00 00 00            	nop dword ptr [rax]
0x2b70:   4c 89 f2                        	mov rdx, r14
0x2b73:   4c 89 ee                        	mov rsi, r13
0x2b76:   44 89 e7                        	mov edi, r12d
0x2b79:   41 ff 14 df                     	call qword ptr [r15 + rbx*8]
0x2b7d:   48 83 c3 01                     	add rbx, 1
0x2b81:   48 39 dd                        	cmp rbp, rbx
0x2b84:   75 ea                           	jne 0x2b70 <__libc_csu_init+0x40>
0x2b86:   48 83 c4 08                     	add rsp, 8
0x2b8a:   5b                              	pop rbx
0x2b8b:   5d                              	pop rbp
0x2b8c:   41 5c                           	pop r12
0x2b8e:   41 5d                           	pop r13
0x2b90:   41 5e                           	pop r14
0x2b92:   41 5f                           	pop r15
0x2b94:   c3                              	ret 
; data inside code section at 0x2b95 -- 0x2ba0
0x2b95:   66 66 2e 0f 1f 84 00 00  00 00 00                  |ff.........     |
; function: __libc_csu_fini at 0x2ba0 -- 0x2ba5
0x2ba0:   f3 0f 1e fa                     	endbr64 
0x2ba4:   c3                              	ret 
; section: .fini
; function: _fini at 0x2ba8 -- 0x2bb5
0x2ba8:   f3 0f 1e fa                     	endbr64 
0x2bac:   48 83 ec 08                     	sub rsp, 8
0x2bb0:   48 83 c4 08                     	add rsp, 8
0x2bb4:   c3                              	ret 

;;
;; Data Segment
;;

; section: .interp
0x2a8:    2f 6c 69 62 36 34 2f 6c  64 2d 6c 69 6e 75 78 2d   |/lib64/ld-linux-|
0x2b8:    78 38 36 2d 36 34 2e 73  6f 2e 32 00 04            |x86-64.so.2..   |
; section: .gnu.hash
0x308:    03 00 00 00 1e 00 00 00  01 00 00 00 06 00 00 00   |................|
0x318:    00 01 a1 00 80 01 10 02  1e 00 00 00 20 00 00 00   |............ ...|
0x328:    00 00 00 00 28 1d 8c 1c  d1 65 ce 6d 66 55 61 10   |....(....e.mfUa.|
0x338:    39 f2 8b 1c ??                                     |9...?           |
; section: .dynsym
0x340:    00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x350:    00 00 00 00 00 00 00 00  c7 00 00 00 12 00 00 00   |................|
0x360:    00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x370:    80 00 00 00 12 00 00 00  00 00 00 00 00 00 00 00   |................|
0x380:    00 00 00 00 00 00 00 00  60 01 00 00 20 00 00 00   |........`... ...|
0x390:    00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x3a0:    19 00 00 00 12 00 00 00  00 00 00 00 00 00 00 00   |................|
0x3b0:    00 00 00 00 00 00 00 00  57 00 00 00 12 00 00 00   |........W.......|
0x3c0:    00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x3d0:    24 01 00 00 12 00 00 00  00 00 00 00 00 00 00 00   |$...............|
0x3e0:    00 00 00 00 00 00 00 00  5c 00 00 00 12 00 00 00   |........\.......|
0x3f0:    00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x400:    d5 00 00 00 12 00 00 00  00 00 00 00 00 00 00 00   |................|
0x410:    00 00 00 00 00 00 00 00  e9 00 00 00 12 00 00 00   |................|
0x420:    00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x430:    91 00 00 00 12 00 00 00  00 00 00 00 00 00 00 00   |................|
0x440:    00 00 00 00 00 00 00 00  12 01 00 00 12 00 00 00   |................|
0x450:    00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x460:    7a 00 00 00 12 00 00 00  00 00 00 00 00 00 00 00   |z...............|
0x470:    00 00 00 00 00 00 00 00  50 00 00 00 12 00 00 00   |........P.......|
0x480:    00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x490:    db 00 00 00 12 00 00 00  00 00 00 00 00 00 00 00   |................|
0x4a0:    00 00 00 00 00 00 00 00  ab 00 00 00 12 00 00 00   |................|
0x4b0:    00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x4c0:    7c 01 00 00 20 00 00 00  00 00 00 00 00 00 00 00   ||... ...........|
0x4d0:    00 00 00 00 00 00 00 00  73 00 00 00 12 00 00 00   |........s.......|
0x4e0:    00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x4f0:    12 00 00 00 12 00 00 00  00 00 00 00 00 00 00 00   |................|
0x500:    00 00 00 00 00 00 00 00  38 00 00 00 12 00 00 00   |........8.......|
0x510:    00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x520:    20 00 00 00 12 00 00 00  00 00 00 00 00 00 00 00   | ...............|
0x530:    00 00 00 00 00 00 00 00  32 00 00 00 12 00 00 00   |........2.......|
0x540:    00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x550:    2d 00 00 00 12 00 00 00  00 00 00 00 00 00 00 00   |-...............|
0x560:    00 00 00 00 00 00 00 00  48 00 00 00 12 00 00 00   |........H.......|
0x570:    00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x580:    96 00 00 00 12 00 00 00  00 00 00 00 00 00 00 00   |................|
0x590:    00 00 00 00 00 00 00 00  8b 01 00 00 20 00 00 00   |............ ...|
0x5a0:    00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x5b0:    ef 00 00 00 12 00 00 00  00 00 00 00 00 00 00 00   |................|
0x5c0:    00 00 00 00 00 00 00 00  b9 00 00 00 12 00 00 00   |................|
0x5d0:    00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x5e0:    04 01 00 00 12 00 00 00  00 00 00 00 00 00 00 00   |................|
0x5f0:    00 00 00 00 00 00 00 00  0b 00 00 00 12 00 00 00   |................|
0x600:    00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x610:    a4 00 00 00 11 00 18 00  80 56 00 00 00 00 00 00   |.........V......|
0x620:    08 00 00 00 00 00 00 00  f5 00 00 00 22 00 00 00   |............"...|
0x630:    00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x640:    6d 00 00 00 11 00 18 00  90 56 00 00 00 00 00 00   |m........V......|
0x650:    08 00 00 00 00 00 00 00  ce 00 00 00 11 00 18 00   |................|
0x660:    a0 56 00 00 00 00 00 00  08 00 00 00 00 00 00 00   |.V..............|
0x670:    00                                                 |.               |
; section: .dynstr
0x670:    00 6c 69 62 63 2e 73 6f  2e 36 00 73 6f 63 6b 65   |.libc.so.6.socke|
0x680:    74 00 66 66 6c 75 73 68  00 73 74 72 63 70 79 00   |t.fflush.strcpy.|
0x690:    5f 5f 70 72 69 6e 74 66  5f 63 68 6b 00 65 78 69   |__printf_chk.exi|
0x6a0:    74 00 66 6f 70 65 6e 00  5f 5f 69 73 6f 63 39 39   |t.fopen.__isoc99|
0x6b0:    5f 73 73 63 61 6e 66 00  63 6f 6e 6e 65 63 74 00   |_sscanf.connect.|
0x6c0:    73 69 67 6e 61 6c 00 70  75 74 73 00 5f 5f 73 74   |signal.puts.__st|
0x6d0:    61 63 6b 5f 63 68 6b 5f  66 61 69 6c 00 73 74 64   |ack_chk_fail.std|
0x6e0:    69 6e 00 73 74 72 74 6f  6c 00 66 67 65 74 73 00   |in.strtol.fgets.|
0x6f0:    5f 5f 65 72 72 6e 6f 5f  6c 6f 63 61 74 69 6f 6e   |__errno_location|
0x700:    00 72 65 61 64 00 5f 5f  66 70 72 69 6e 74 66 5f   |.read.__fprintf_|
0x710:    63 68 6b 00 73 74 64 6f  75 74 00 5f 5f 6d 65 6d   |chk.stdout.__mem|
0x720:    6d 6f 76 65 5f 63 68 6b  00 5f 5f 63 74 79 70 65   |move_chk.__ctype|
0x730:    5f 62 5f 6c 6f 63 00 67  65 74 65 6e 76 00 73 74   |_b_loc.getenv.st|
0x740:    64 65 72 72 00 61 6c 61  72 6d 00 67 65 74 68 6f   |derr.alarm.getho|
0x750:    73 74 62 79 6e 61 6d 65  00 63 6c 6f 73 65 00 73   |stbyname.close.s|
0x760:    6c 65 65 70 00 5f 5f 63  78 61 5f 66 69 6e 61 6c   |leep.__cxa_final|
0x770:    69 7a 65 00 5f 5f 73 70  72 69 6e 74 66 5f 63 68   |ize.__sprintf_ch|
0x780:    6b 00 5f 5f 6c 69 62 63  5f 73 74 61 72 74 5f 6d   |k.__libc_start_m|
0x790:    61 69 6e 00 77 72 69 74  65 00 47 4c 49 42 43 5f   |ain.write.GLIBC_|
0x7a0:    32 2e 33 00 47 4c 49 42  43 5f 32 2e 37 00 47 4c   |2.3.GLIBC_2.7.GL|
0x7b0:    49 42 43 5f 32 2e 33 2e  34 00 47 4c 49 42 43 5f   |IBC_2.3.4.GLIBC_|
0x7c0:    32 2e 34 00 47 4c 49 42  43 5f 32 2e 32 2e 35 00   |2.4.GLIBC_2.2.5.|
0x7d0:    5f 49 54 4d 5f 64 65 72  65 67 69 73 74 65 72 54   |_ITM_deregisterT|
0x7e0:    4d 43 6c 6f 6e 65 54 61  62 6c 65 00 5f 5f 67 6d   |MCloneTable.__gm|
0x7f0:    6f 6e 5f 73 74 61 72 74  5f 5f 00 5f 49 54 4d 5f   |on_start__._ITM_|
0x800:    72 65 67 69 73 74 65 72  54 4d 43 6c 6f 6e 65 54   |registerTMCloneT|
0x810:    61 62 6c 65 00 ??                                  |able.?          |
; section: .gnu.version
0x816:    00 00 02 00 02 00 00 00  02 00 02 00 02 00 03 00   |................|
0x826:    02 00 02 00 02 00 02 00  02 00 02 00 02 00 04 00   |................|
0x836:    00 00 02 00 02 00 05 00  04 00 02 00 02 00 02 00   |................|
0x846:    04 00 00 00 02 00 06 00  04 00 02 00 02 00 02 00   |................|
0x856:    02 00 02 00 ??                                     |....?           |
; section: .gnu.version_r
0x860:    01 00 05 00 01 00 00 00  10 00 00 00 00 00 00 00   |................|
0x870:    13 69 69 0d 00 00 06 00  2a 01 00 00 10 00 00 00   |.ii.....*.......|
0x880:    17 69 69 0d 00 00 05 00  34 01 00 00 10 00 00 00   |.ii.....4.......|
0x890:    74 19 69 09 00 00 04 00  3e 01 00 00 10 00 00 00   |t.i.....>.......|
0x8a0:    14 69 69 0d 00 00 03 00  4a 01 00 00 10 00 00 00   |.ii.....J.......|
0x8b0:    75 1a 69 09 00 00 02 00  54 01 00 00 00 00 00 00   |u.i.....T.......|
0x8c0:    f8                                                 |.               |
; section: .rela.dyn
0x8c0:    f8 4c 00 00 00 00 00 00  08 00 00 00 00 00 00 00   |.L..............|
0x8d0:    d0 12 00 00 00 00 00 00  00 4d 00 00 00 00 00 00   |.........M......|
0x8e0:    08 00 00 00 00 00 00 00  90 12 00 00 00 00 00 00   |................|
0x8f0:    08 50 00 00 00 00 00 00  08 00 00 00 00 00 00 00   |.P..............|
0x900:    08 50 00 00 00 00 00 00  58 51 00 00 00 00 00 00   |.P......XQ......|
0x910:    08 00 00 00 00 00 00 00  70 51 00 00 00 00 00 00   |........pQ......|
0x920:    60 51 00 00 00 00 00 00  08 00 00 00 00 00 00 00   |`Q..............|
0x930:    90 51 00 00 00 00 00 00  78 51 00 00 00 00 00 00   |.Q......xQ......|
0x940:    08 00 00 00 00 00 00 00  f0 51 00 00 00 00 00 00   |.........Q......|
0x950:    80 51 00 00 00 00 00 00  08 00 00 00 00 00 00 00   |.Q..............|
0x960:    b0 51 00 00 00 00 00 00  98 51 00 00 00 00 00 00   |.Q.......Q......|
0x970:    08 00 00 00 00 00 00 00  d0 51 00 00 00 00 00 00   |.........Q......|
0x980:    a0 51 00 00 00 00 00 00  08 00 00 00 00 00 00 00   |.Q..............|
0x990:    10 52 00 00 00 00 00 00  b8 51 00 00 00 00 00 00   |.R.......Q......|
0x9a0:    08 00 00 00 00 00 00 00  b0 50 00 00 00 00 00 00   |.........P......|
0x9b0:    c0 51 00 00 00 00 00 00  08 00 00 00 00 00 00 00   |.Q..............|
0x9c0:    70 50 00 00 00 00 00 00  d8 51 00 00 00 00 00 00   |pP.......Q......|
0x9d0:    08 00 00 00 00 00 00 00  10 50 00 00 00 00 00 00   |.........P......|
0x9e0:    e0 51 00 00 00 00 00 00  08 00 00 00 00 00 00 00   |.Q..............|
0x9f0:    d0 50 00 00 00 00 00 00  f8 51 00 00 00 00 00 00   |.P.......Q......|
0xa00:    08 00 00 00 00 00 00 00  30 50 00 00 00 00 00 00   |........0P......|
0xa10:    00 52 00 00 00 00 00 00  08 00 00 00 00 00 00 00   |.R..............|
0xa20:    90 50 00 00 00 00 00 00  18 52 00 00 00 00 00 00   |.P.......R......|
0xa30:    08 00 00 00 00 00 00 00  50 50 00 00 00 00 00 00   |........PP......|
0xa40:    20 52 00 00 00 00 00 00  08 00 00 00 00 00 00 00   | R..............|
0xa50:    f0 50 00 00 00 00 00 00  38 52 00 00 00 00 00 00   |.P......8R......|
0xa60:    08 00 00 00 00 00 00 00  40 52 00 00 00 00 00 00   |........@R......|
0xa70:    48 52 00 00 00 00 00 00  08 00 00 00 00 00 00 00   |HR..............|
0xa80:    50 52 00 00 00 00 00 00  58 52 00 00 00 00 00 00   |PR......XR......|
0xa90:    08 00 00 00 00 00 00 00  60 52 00 00 00 00 00 00   |........`R......|
0xaa0:    68 52 00 00 00 00 00 00  08 00 00 00 00 00 00 00   |hR..............|
0xab0:    70 52 00 00 00 00 00 00  78 52 00 00 00 00 00 00   |pR......xR......|
0xac0:    08 00 00 00 00 00 00 00  10 51 00 00 00 00 00 00   |.........Q......|
0xad0:    80 52 00 00 00 00 00 00  08 00 00 00 00 00 00 00   |.R..............|
0xae0:    57 34 00 00 00 00 00 00  88 52 00 00 00 00 00 00   |W4.......R......|
0xaf0:    08 00 00 00 00 00 00 00  5f 34 00 00 00 00 00 00   |........_4......|
0xb00:    90 52 00 00 00 00 00 00  08 00 00 00 00 00 00 00   |.R..............|
0xb10:    69 34 00 00 00 00 00 00  98 52 00 00 00 00 00 00   |i4.......R......|
0xb20:    08 00 00 00 00 00 00 00  71 34 00 00 00 00 00 00   |........q4......|
0xb30:    d8 4f 00 00 00 00 00 00  06 00 00 00 03 00 00 00   |.O..............|
0xb40:    00 00 00 00 00 00 00 00  e0 4f 00 00 00 00 00 00   |.........O......|
0xb50:    06 00 00 00 0b 00 00 00  00 00 00 00 00 00 00 00   |................|
0xb60:    e8 4f 00 00 00 00 00 00  06 00 00 00 10 00 00 00   |.O..............|
0xb70:    00 00 00 00 00 00 00 00  f0 4f 00 00 00 00 00 00   |.........O......|
0xb80:    06 00 00 00 19 00 00 00  00 00 00 00 00 00 00 00   |................|
0xb90:    f8 4f 00 00 00 00 00 00  06 00 00 00 1f 00 00 00   |.O..............|
0xba0:    00 00 00 00 00 00 00 00  80 56 00 00 00 00 00 00   |.........V......|
0xbb0:    05 00 00 00 1e 00 00 00  00 00 00 00 00 00 00 00   |................|
0xbc0:    90 56 00 00 00 00 00 00  05 00 00 00 20 00 00 00   |.V.......... ...|
0xbd0:    00 00 00 00 00 00 00 00  a0 56 00 00 00 00 00 00   |.........V......|
0xbe0:    05 00 00 00 21 00 00 00  00 00 00 00 00 00 00 00   |....!...........|
0xbf0:    10                                                 |.               |
; section: .rela.plt
0xbf0:    10 4f 00 00 00 00 00 00  07 00 00 00 01 00 00 00   |.O..............|
0xc00:    00 00 00 00 00 00 00 00  18 4f 00 00 00 00 00 00   |.........O......|
0xc10:    07 00 00 00 02 00 00 00  00 00 00 00 00 00 00 00   |................|
0xc20:    20 4f 00 00 00 00 00 00  07 00 00 00 04 00 00 00   | O..............|
0xc30:    00 00 00 00 00 00 00 00  28 4f 00 00 00 00 00 00   |........(O......|
0xc40:    07 00 00 00 05 00 00 00  00 00 00 00 00 00 00 00   |................|
0xc50:    30 4f 00 00 00 00 00 00  07 00 00 00 06 00 00 00   |0O..............|
0xc60:    00 00 00 00 00 00 00 00  38 4f 00 00 00 00 00 00   |........8O......|
0xc70:    07 00 00 00 07 00 00 00  00 00 00 00 00 00 00 00   |................|
0xc80:    40 4f 00 00 00 00 00 00  07 00 00 00 08 00 00 00   |@O..............|
0xc90:    00 00 00 00 00 00 00 00  48 4f 00 00 00 00 00 00   |........HO......|
0xca0:    07 00 00 00 09 00 00 00  00 00 00 00 00 00 00 00   |................|
0xcb0:    50 4f 00 00 00 00 00 00  07 00 00 00 0a 00 00 00   |PO..............|
0xcc0:    00 00 00 00 00 00 00 00  58 4f 00 00 00 00 00 00   |........XO......|
0xcd0:    07 00 00 00 0c 00 00 00  00 00 00 00 00 00 00 00   |................|
0xce0:    60 4f 00 00 00 00 00 00  07 00 00 00 0d 00 00 00   |`O..............|
0xcf0:    00 00 00 00 00 00 00 00  68 4f 00 00 00 00 00 00   |........hO......|
0xd00:    07 00 00 00 0e 00 00 00  00 00 00 00 00 00 00 00   |................|
0xd10:    70 4f 00 00 00 00 00 00  07 00 00 00 0f 00 00 00   |pO..............|
0xd20:    00 00 00 00 00 00 00 00  78 4f 00 00 00 00 00 00   |........xO......|
0xd30:    07 00 00 00 11 00 00 00  00 00 00 00 00 00 00 00   |................|
0xd40:    80 4f 00 00 00 00 00 00  07 00 00 00 12 00 00 00   |.O..............|
0xd50:    00 00 00 00 00 00 00 00  88 4f 00 00 00 00 00 00   |.........O......|
0xd60:    07 00 00 00 13 00 00 00  00 00 00 00 00 00 00 00   |................|
0xd70:    90 4f 00 00 00 00 00 00  07 00 00 00 14 00 00 00   |.O..............|
0xd80:    00 00 00 00 00 00 00 00  98 4f 00 00 00 00 00 00   |.........O......|
0xd90:    07 00 00 00 15 00 00 00  00 00 00 00 00 00 00 00   |................|
0xda0:    a0 4f 00 00 00 00 00 00  07 00 00 00 16 00 00 00   |.O..............|
0xdb0:    00 00 00 00 00 00 00 00  a8 4f 00 00 00 00 00 00   |.........O......|
0xdc0:    07 00 00 00 17 00 00 00  00 00 00 00 00 00 00 00   |................|
0xdd0:    b0 4f 00 00 00 00 00 00  07 00 00 00 18 00 00 00   |.O..............|
0xde0:    00 00 00 00 00 00 00 00  b8 4f 00 00 00 00 00 00   |.........O......|
0xdf0:    07 00 00 00 1a 00 00 00  00 00 00 00 00 00 00 00   |................|
0xe00:    c0 4f 00 00 00 00 00 00  07 00 00 00 1b 00 00 00   |.O..............|
0xe10:    00 00 00 00 00 00 00 00  c8 4f 00 00 00 00 00 00   |.........O......|
0xe20:    07 00 00 00 1c 00 00 00  00 00 00 00 00 00 00 00   |................|
0xe30:    d0 4f 00 00 00 00 00 00  07 00 00 00 1d 00 00 00   |.O..............|
0xe40:    00 00 00 00 00 00 00 00  ??                        |........?       |
; section: .rodata
0x3000:   01 00 02 00 72 00                                  |....r.          |
0x3006:   25 73 3a 20 45 72 72 6f  72 3a 20 43 6f 75 6c 64   |%s: Error: Could|   "%s: Error: Couldn't open %s\n"
0x3016:   6e 27 74 20 6f 70 65 6e  20 25 73 0a 00            |n't open %s..   |
0x3023:   55 73 61 67 65 3a 20 25  73 20 5b 3c 69 6e 70 75   |Usage: %s [<inpu|   "Usage: %s [<input_file>]\n"
0x3033:   74 5f 66 69 6c 65 3e 5d  0a 00                     |t_file>]..      |
0x303d:   54 68 61 74 27 73 20 6e  75 6d 62 65 72 20 32 2e   |That's number 2.|   "That's number 2.  Keep going!"
0x304d:   20 20 4b 65 65 70 20 67  6f 69 6e 67 21 00         |  Keep going!.  |
0x305b:   48 61 6c 66 77 61 79 20  74 68 65 72 65 21 00      |Halfway there!. |   "Halfway there!"
0x306a:   47 6f 6f 64 20 77 6f 72  6b 21 20 20 4f 6e 20 74   |Good work!  On t|   "Good work!  On to the next..."
0x307a:   6f 20 74 68 65 20 6e 65  78 74 2e 2e 2e 00         |o the next....  |
0x3088:   57 65 6c 63 6f 6d 65 20  74 6f 20 6d 79 20 66 69   |Welcome to my fi|   "Welcome to my fiendish little bomb. You have 6 phases with"
0x3098:   65 6e 64 69 73 68 20 6c  69 74 74 6c 65 20 62 6f   |endish little bo|
0x30a8:   6d 62 2e 20 59 6f 75 20  68 61 76 65 20 36 20 70   |mb. You have 6 p|
0x30b8:   68 61 73 65 73 20 77 69  74 68 00                  |hases with.     |
0x30c3:   00 00 00 00 00                                     |.....           |
0x30c8:   77 68 69 63 68 20 74 6f  20 62 6c 6f 77 20 79 6f   |which to blow yo|   "which to blow yourself up. Have a nice day!"
0x30d8:   75 72 73 65 6c 66 20 75  70 2e 20 48 61 76 65 20   |urself up. Have |
0x30e8:   61 20 6e 69 63 65 20 64  61 79 21 00               |a nice day!.    |
0x30f4:   00 00 00 00                                        |....            |
0x30f8:   50 68 61 73 65 20 31 20  64 65 66 75 73 65 64 2e   |Phase 1 defused.|   "Phase 1 defused. How about the next one?"
0x3108:   20 48 6f 77 20 61 62 6f  75 74 20 74 68 65 20 6e   | How about the n|
0x3118:   65 78 74 20 6f 6e 65 3f  00                        |ext one?.       |
0x3121:   00 00 00 00 00 00 00                               |.......         |
0x3128:   53 6f 20 79 6f 75 20 67  6f 74 20 74 68 61 74 20   |So you got that |   "So you got that one.  Try this one."
0x3138:   6f 6e 65 2e 20 20 54 72  79 20 74 68 69 73 20 6f   |one.  Try this o|
0x3148:   6e 65 2e 00                                        |ne..            |
0x314c:   00 00 00 00                                        |....            |
0x3150:   54 68 65 72 65 20 61 72  65 20 72 75 6d 6f 72 73   |There are rumors|   "There are rumors on the internets."
0x3160:   20 6f 6e 20 74 68 65 20  69 6e 74 65 72 6e 65 74   | on the internet|
0x3170:   73 2e 00                                           |s..             |
0x3173:   00 00 00 00 00                                     |.....           |
0x3178:   57 6f 77 21 20 59 6f 75  27 76 65 20 64 65 66 75   |Wow! You've defu|   "Wow! You've defused the secret stage!"
0x3188:   73 65 64 20 74 68 65 20  73 65 63 72 65 74 20 73   |sed the secret s|
0x3198:   74 61 67 65 21 00                                  |tage!.          |
0x319e:   00 00 74 e3 ff ff 7b e3  ff ff c7 e3 ff ff ce e3   |..t...{.........|
0x31ae:   ff ff d5 e3 ff ff dc e3  ff ff e3 e3 ff ff ea e3   |................|
0x31be:   ff ff 02 00 00 00 0a 00  00 00 06 00 00 00 01 00   |................|
0x31ce:   00 00 0c 00 00 00 10 00  00 00 09 00 00 00 03 00   |................|
0x31de:   00 00 04 00 00 00 07 00  00 00 0e 00 00 00 05 00   |................|
0x31ee:   00 00 0b 00 00 00 08 00  00 00 0f 00 00 00 0d 00   |................|
0x31fe:   00 00                                              |..              |
0x3200:   53 6f 20 79 6f 75 20 74  68 69 6e 6b 20 79 6f 75   |So you think you|   "So you think you can stop the bomb with ctrl-c, do you?"
0x3210:   20 63 61 6e 20 73 74 6f  70 20 74 68 65 20 62 6f   | can stop the bo|
0x3220:   6d 62 20 77 69 74 68 20  63 74 72 6c 2d 63 2c 20   |mb with ctrl-c, |
0x3230:   64 6f 20 79 6f 75 3f 00                            |do you?.        |
0x3238:   45 72 72 6f 72 3a 20 43  61 6e 6e 6f 74 20 63 6f   |Error: Cannot co|   "Error: Cannot connect to server"
0x3248:   6e 6e 65 63 74 20 74 6f  20 73 65 72 76 65 72 00   |nnect to server.|
0x3258:   45 52 52 4f 52 3a 20 49  6e 70 75 74 20 73 74 72   |ERROR: Input str|   "ERROR: Input string is too large."
0x3268:   69 6e 67 20 69 73 20 74  6f 6f 20 6c 61 72 67 65   |ing is too large|
0x3278:   2e 00                                              |..              |
0x327a:   00 00 00 00 00 00                                  |......          |
0x3280:   59 6f 75 72 20 69 6e 73  74 72 75 63 74 6f 72 20   |Your instructor |   "Your instructor has been notified."
0x3290:   68 61 73 20 62 65 65 6e  20 6e 6f 74 69 66 69 65   |has been notifie|
0x32a0:   64 2e 00                                           |d..             |
0x32a3:   00 00 00 00 00                                     |.....           |
0x32a8:   43 75 72 73 65 73 2c 20  79 6f 75 27 76 65 20 66   |Curses, you've f|   "Curses, you've found the secret phase!"
0x32b8:   6f 75 6e 64 20 74 68 65  20 73 65 63 72 65 74 20   |ound the secret |
0x32c8:   70 68 61 73 65 21 00                               |phase!.         |
0x32cf:   00                                                 |.               |
0x32d0:   42 75 74 20 66 69 6e 64  69 6e 67 20 69 74 20 61   |But finding it a|   "But finding it and solving it are quite different..."
0x32e0:   6e 64 20 73 6f 6c 76 69  6e 67 20 69 74 20 61 72   |nd solving it ar|
0x32f0:   65 20 71 75 69 74 65 20  64 69 66 66 65 72 65 6e   |e quite differen|
0x3300:   74 2e 2e 2e 00                                     |t....           |
0x3305:   00 00 00                                           |...             |
0x3308:   43 6f 6e 67 72 61 74 75  6c 61 74 69 6f 6e 73 21   |Congratulations!|   "Congratulations! You've defused the bomb!"
0x3318:   20 59 6f 75 27 76 65 20  64 65 66 75 73 65 64 20   | You've defused |
0x3328:   74 68 65 20 62 6f 6d 62  21 00                     |the bomb!.      |
0x3332:   00 00 00 00 00 00                                  |......          |
0x3338:   59 6f 75 72 20 69 6e 73  74 72 75 63 74 6f 72 20   |Your instructor |   "Your instructor has been notified and will verify your solution."
0x3348:   68 61 73 20 62 65 65 6e  20 6e 6f 74 69 66 69 65   |has been notifie|
0x3358:   64 20 61 6e 64 20 77 69  6c 6c 20 76 65 72 69 66   |d and will verif|
0x3368:   79 20 79 6f 75 72 20 73  6f 6c 75 74 69 6f 6e 2e   |y your solution.|
0x3378:   00                                                 |.               |
0x3379:   57 65 6c 6c 2e 2e 2e 00                            |Well....        |   "Well..."
0x3381:   4f 4b 2e 20 3a 2d 29 00                            |OK. :-).        |   "OK. :-)"
0x3389:   49 6e 76 61 6c 69 64 20  70 68 61 73 65 25 73 0a   |Invalid phase%s.|   "Invalid phase%s\n"
0x3399:   00                                                 |.               |
0x339a:   49 6e 69 74 69 61 6c 69  7a 61 74 69 6f 6e 20 65   |Initialization e|   "Initialization error:\n%s\n"
0x33aa:   72 72 6f 72 3a 0a 25 73  0a 00                     |rror:.%s..      |
0x33b4:   64 65 66 75 73 65 64 00                            |defused.        |   "defused"
0x33bc:   65 78 70 6c 6f 64 65 64  00                        |exploded.       |   "exploded"
0x33c5:   25 64 3a 25 73 3a 25 64  3a 25 73 00               |%d:%s:%d:%s.    |   "%d:%s:%d:%s"
0x33d1:   0a 42 4f 4f 4d 21 21 21  00                        |.BOOM!!!.       |   "\nBOOM!!!"
0x33da:   54 68 65 20 62 6f 6d 62  20 68 61 73 20 62 6c 6f   |The bomb has blo|   "The bomb has blown up."
0x33ea:   77 6e 20 75 70 2e 00                               |wn up..         |
0x33f1:   25 64 20 25 64 20 25 64  20 25 64 20 25 64 20 25   |%d %d %d %d %d %|   "%d %d %d %d %d %d"
0x3401:   64 00                                              |d.              |
0x3403:   45 72 72 6f 72 3a 20 50  72 65 6d 61 74 75 72 65   |Error: Premature|   "Error: Premature EOF on stdin"
0x3413:   20 45 4f 46 20 6f 6e 20  73 74 64 69 6e 00         | EOF on stdin.  |
0x3421:   47 52 41 44 45 5f 42 4f  4d 42 00                  |GRADE_BOMB.     |   "GRADE_BOMB"
0x342c:   45 72 72 6f 72 3a 20 49  6e 70 75 74 20 6c 69 6e   |Error: Input lin|   "Error: Input line too long"
0x343c:   65 20 74 6f 6f 20 6c 6f  6e 67 00                  |e too long.     |
0x3447:   25 64 20 25 64 20 25 73  00                        |%d %d %s.       |   "%d %d %s"
0x3450:   44 72 45 76 69 6c 00                               |DrEvil.         |   "DrEvil"
0x3457:   63 61 72 69 6e 61 65 00  64 65 6c 70 68 69 6e 75   |carinae.delphinu|
0x3467:   73 00 70 6d 72 33 33 30  39 00 68 6f 73 74 6e 61   |s.pmr3309.hostna|
0x3477:   6d 65 30 31 32 33 34 35  36 37 38 39 30 31 32 33   |me01234567890123|
0x3487:   34 35 36 37 39 30 00 00  00                        |456790...       |
0x3490:   50 72 6f 67 72 61 6d 20  74 69 6d 65 64 20 6f 75   |Program timed ou|   "Program timed out after %d seconds\n"
0x34a0:   74 20 61 66 74 65 72 20  25 64 20 73 65 63 6f 6e   |t after %d secon|
0x34b0:   64 73 0a 00                                        |ds..            |
0x34b4:   00 00 00 00                                        |....            |
0x34b8:   45 72 72 6f 72 3a 20 48  54 54 50 20 72 65 71 75   |Error: HTTP requ|   "Error: HTTP request failed with error %d: %s"
0x34c8:   65 73 74 20 66 61 69 6c  65 64 20 77 69 74 68 20   |est failed with |
0x34d8:   65 72 72 6f 72 20 25 64  3a 20 25 73 00            |error %d: %s.   |
0x34e5:   00 00 00                                           |...             |
0x34e8:   47 45 54 20 2f 25 73 2f  73 75 62 6d 69 74 72 2e   |GET /%s/submitr.|   "GET /%s/submitr.pl/?userid=%s&userpwd=%s&lab=%s&result=%s&submit=submit HTTP/1.0\r\n\r\n"
0x34f8:   70 6c 2f 3f 75 73 65 72  69 64 3d 25 73 26 75 73   |pl/?userid=%s&us|
0x3508:   65 72 70 77 64 3d 25 73  26 6c 61 62 3d 25 73 26   |erpwd=%s&lab=%s&|
0x3518:   72 65 73 75 6c 74 3d 25  73 26 73 75 62 6d 69 74   |result=%s&submit|
0x3528:   3d 73 75 62 6d 69 74 20  48 54 54 50 2f 31 2e 30   |=submit HTTP/1.0|
0x3538:   0d 0a 0d 0a 00                                     |.....           |
0x353d:   00 00 00                                           |...             |
0x3540:   45 72 72 6f 72 3a 20 55  6e 61 62 6c 65 20 74 6f   |Error: Unable to|   "Error: Unable to connect to server %s"
0x3550:   20 63 6f 6e 6e 65 63 74  20 74 6f 20 73 65 72 76   | connect to serv|
0x3560:   65 72 20 25 73 00                                  |er %s.          |
0x3566:   25 25 25 30 32 58 00                               |%%%02X.         |   "%%%02X"
0x356d:   25 73 20 25 64 20 25 5b  61 2d 7a 41 2d 7a 20 5d   |%s %d %[a-zA-z ]|   "%s %d %[a-zA-z ]"
0x357d:   00                                                 |.               |
0x357e:   0d 0a 00                                           |...             |   "\r\n"
0x3581:   4f 4b 00                                           |OK.             |   "OK"
0x3584:   32 30 30 2e 31 34 34 2e  32 35 34 2e 31 39 31 00   |200.144.254.191.|   "200.144.254.191"
0x3594:   0a 41 55 54 4f 52 45 53  55 4c 54 5f 53 54 52 49   |.AUTORESULT_STRI|   "\nAUTORESULT_STRING=%s\n"
0x35a4:   4e 47 3d 25 73 0a 00                               |NG=%s..         |
0x35ab:   70 6d 72 33 33 30 39 5f  32 30 32 31 00            |pmr3309_2021.   |   "pmr3309_2021"
0x35b8:   63 73 61 70 70 00                                  |csapp.          |   "csapp"
0x35be:   ??                                                 |?               |
; section: .eh_frame_hdr
0x35c0:   01 1b 03 3b 2c 01 00 00  24 00 00 00 60 da ff ff   |...;,...$...`...|
0x35d0:   60 01 00 00 00 dc ff ff  88 01 00 00 10 dc ff ff   |`...............|
0x35e0:   48 01 00 00 1a dd ff ff  a0 01 00 00 74 de ff ff   |H...........t...|
0x35f0:   c0 01 00 00 94 de ff ff  dc 01 00 00 03 df ff ff   |................|
0x3600:   08 02 00 00 e2 df ff ff  24 02 00 00 21 e0 ff ff   |........$...!...|
0x3610:   40 02 00 00 96 e0 ff ff  5c 02 00 00 dc e0 ff ff   |@.......\.......|
0x3620:   78 02 00 00 22 e2 ff ff  c0 02 00 00 61 e2 ff ff   |x...".......a...|
0x3630:   e0 02 00 00 b9 e2 ff ff  00 03 00 00 15 e3 ff ff   |................|
0x3640:   14 03 00 00 3c e3 ff ff  28 03 00 00 59 e3 ff ff   |....<...(...Y...|
0x3650:   3c 03 00 00 c0 e3 ff ff  68 03 00 00 3a e4 ff ff   |<.......h...:...|
0x3660:   84 03 00 00 3c e4 ff ff  98 03 00 00 77 e4 ff ff   |....<.......w...|
0x3670:   c0 03 00 00 c5 e4 ff ff  e8 03 00 00 f2 e4 ff ff   |................|
0x3680:   04 04 00 00 16 e6 ff ff  3c 04 00 00 52 e6 ff ff   |........<...R...|
0x3690:   50 04 00 00 93 e6 ff ff  74 04 00 00 f0 e7 ff ff   |P.......t.......|
0x36a0:   94 04 00 00 b4 e8 ff ff  b0 04 00 00 e4 e8 ff ff   |................|
0x36b0:   c4 04 00 00 a0 e9 ff ff  04 05 00 00 e1 f1 ff ff   |................|
0x36c0:   70 05 00 00 0c f2 ff ff  8c 05 00 00 15 f4 ff ff   |p...............|
0x36d0:   c0 05 00 00 f7 f4 ff ff  ec 05 00 00 70 f5 ff ff   |............p...|
0x36e0:   18 06 00 00 e0 f5 ff ff  60 06 00 00 ??            |........`...?   |
; section: .eh_frame
0x36f0:   14 00 00 00 00 00 00 00  01 7a 52 00 01 78 10 01   |.........zR..x..|
0x3700:   1b 0c 07 08 90 01 00 00  14 00 00 00 1c 00 00 00   |................|
0x3710:   c0 da ff ff 2f 00 00 00  00 44 07 10 00 00 00 00   |..../....D......|
0x3720:   24 00 00 00 34 00 00 00  f8 d8 ff ff a0 01 00 00   |$...4...........|
0x3730:   00 0e 10 46 0e 18 4a 0f  0b 77 08 80 00 3f 1a 3b   |...F..J..w...?.;|
0x3740:   2a 33 24 22 00 00 00 00  14 00 00 00 5c 00 00 00   |*3$"........\...|
0x3750:   70 da ff ff 08 00 00 00  00 00 00 00 00 00 00 00   |p...............|
0x3760:   1c 00 00 00 74 00 00 00  72 db ff ff 5a 01 00 00   |....t...r...Z...|
0x3770:   00 41 0e 10 83 02 03 00  01 0a 0e 08 41 0b 00 00   |.A..........A...|
0x3780:   18 00 00 00 94 00 00 00  ac dc ff ff 20 00 00 00   |............ ...|
0x3790:   00 44 0e 10 54 0a 0e 08  41 0b 00 00 28 00 00 00   |.D..T...A...(...|
0x37a0:   b0 00 00 00 b0 dc ff ff  6f 00 00 00 00 41 0e 10   |........o....A..|
0x37b0:   86 02 41 0e 18 83 03 44  0e 40 02 61 0a 0e 18 41   |..A....D.@.a...A|
0x37c0:   0e 10 41 0e 08 41 0b 00  18 00 00 00 dc 00 00 00   |..A..A..........|
0x37d0:   f3 dc ff ff df 00 00 00  00 44 0e 20 02 9f 0a 0e   |.........D. ....|
0x37e0:   08 41 0b 00 18 00 00 00  f8 00 00 00 b6 dd ff ff   |.A..............|
0x37f0:   3f 00 00 00 00 44 0e 10  60 0a 0e 08 41 0b 00 00   |?....D..`...A...|
0x3800:   18 00 00 00 14 01 00 00  d9 dd ff ff 75 00 00 00   |............u...|
0x3810:   00 44 0e 20 02 6b 0a 0e  08 41 0b 00 18 00 00 00   |.D. .k...A......|
0x3820:   30 01 00 00 32 de ff ff  46 00 00 00 00 41 0e 10   |0...2...F....A..|
0x3830:   83 02 7d 0a 0e 08 41 0b  44 00 00 00 4c 01 00 00   |..}...A.D...L...|
0x3840:   5c de ff ff 46 01 00 00  00 42 0e 10 8e 02 42 0e   |\...F....B....B.|
0x3850:   18 8d 03 42 0e 20 8c 04  41 0e 28 86 05 41 0e 30   |...B. ..A.(..A.0|
0x3860:   83 06 44 0e 90 01 03 2c  01 0a 0e 30 41 0e 28 41   |..D....,...0A.(A|
0x3870:   0e 20 42 0e 18 42 0e 10  42 0e 08 41 0b 00 00 00   |. B..B..B..A....|
0x3880:   1c 00 00 00 94 01 00 00  5a df ff ff 3f 00 00 00   |........Z...?...|
0x3890:   00 49 0e 10 53 0a 0e 08  41 0b 5c 0e 08 00 00 00   |.I..S...A.\.....|
0x38a0:   1c 00 00 00 b4 01 00 00  79 df ff ff 58 00 00 00   |........y...X...|
0x38b0:   00 41 0e 10 83 02 02 48  0a 0e 08 41 0b 00 00 00   |.A.....H...A....|
0x38c0:   10 00 00 00 d4 01 00 00  b1 df ff ff 5c 00 00 00   |............\...|
0x38d0:   00 44 0e 10 10 00 00 00  e8 01 00 00 f9 df ff ff   |.D..............|
0x38e0:   27 00 00 00 00 44 0e 10  10 00 00 00 fc 01 00 00   |'....D..........|
0x38f0:   0c e0 ff ff 1d 00 00 00  00 00 00 00 28 00 00 00   |............(...|
0x3900:   10 02 00 00 15 e0 ff ff  67 00 00 00 00 42 0e 10   |........g....B..|
0x3910:   8c 02 41 0e 18 86 03 41  0e 20 83 04 63 0a 0e 18   |..A....A. ..c...|
0x3920:   41 0e 10 42 0e 08 41 0b  18 00 00 00 3c 02 00 00   |A..B..A.....<...|
0x3930:   50 e0 ff ff 7a 00 00 00  00 47 0e a0 40 02 4a 0a   |P...z....G..@.J.|
0x3940:   0e 08 41 0b 10 00 00 00  58 02 00 00 ae e0 ff ff   |..A.....X.......|
0x3950:   02 00 00 00 00 00 00 00  24 00 00 00 6c 02 00 00   |........$...l...|
0x3960:   9c e0 ff ff 3b 00 00 00  00 41 0e 10 86 02 41 0e   |....;....A....A.|
0x3970:   18 83 03 44 0e 20 72 0e  18 41 0e 10 41 0e 08 00   |...D. r..A..A...|
0x3980:   24 00 00 00 94 02 00 00  af e0 ff ff 4e 00 00 00   |$...........N...|
0x3990:   00 41 0e 10 86 02 41 0e  18 83 03 44 0e 20 02 45   |.A....A....D. .E|
0x39a0:   0e 18 41 0e 10 41 0e 08  18 00 00 00 bc 02 00 00   |..A..A..........|
0x39b0:   d5 e0 ff ff 2d 00 00 00  00 44 0e 10 52 0a 0e 08   |....-....D..R...|
0x39c0:   41 0b 00 00 34 00 00 00  d8 02 00 00 e6 e0 ff ff   |A...4...........|
0x39d0:   24 01 00 00 00 41 0e 10  83 02 47 0e a0 80 01 02   |$....A....G.....|
0x39e0:   73 0e a8 80 01 41 0e b0  80 01 02 4c 0e a0 80 01   |s....A.....L....|
0x39f0:   5e 0a 0e 10 41 0e 08 41  0b 00 00 00 10 00 00 00   |^...A..A........|
0x3a00:   10 03 00 00 d2 e1 ff ff  3c 00 00 00 00 44 0e 10   |........<....D..|
0x3a10:   20 00 00 00 24 03 00 00  fa e1 ff ff 41 00 00 00   | ...$.......A...|
0x3a20:   00 44 0e 10 4c 0e 18 45  0e 20 5d 0e 10 49 0a 0e   |.D..L..E. ]..I..|
0x3a30:   08 41 0b 00 1c 00 00 00  48 03 00 00 17 e2 ff ff   |.A......H.......|
0x3a40:   5d 01 00 00 00 41 0e 10  83 02 02 99 0a 0e 08 41   |]....A.........A|
0x3a50:   0b 00 00 00 18 00 00 00  68 03 00 00 54 e3 ff ff   |........h...T...|
0x3a60:   c4 00 00 00 00 44 0e 80  01 7b 0a 0e 08 41 0b 00   |.....D...{...A..|
0x3a70:   10 00 00 00 84 03 00 00  fc e3 ff ff 30 00 00 00   |............0...|
0x3a80:   00 44 0e 10 3c 00 00 00  98 03 00 00 18 e4 ff ff   |.D..<...........|
0x3a90:   bc 00 00 00 00 42 0e 10  8e 02 42 0e 18 8d 03 42   |.....B....B....B|
0x3aa0:   0e 20 8c 04 41 0e 28 86  05 41 0e 30 83 06 02 84   |. ..A.(..A.0....|
0x3ab0:   0a 0e 28 41 0e 20 42 0e  18 42 0e 10 42 0e 08 41   |..(A. B..B..B..A|
0x3ac0:   0b 00 00 00 68 00 00 00  d8 03 00 00 94 e4 ff ff   |....h...........|
0x3ad0:   41 08 00 00 00 42 0e 10  8f 02 42 0e 18 8e 03 42   |A....B....B....B|
0x3ae0:   0e 20 8d 04 42 0e 28 8c  05 41 0e 30 86 06 41 0e   |. ..B.(..A.0..A.|
0x3af0:   38 83 07 47 0e b0 c1 02  03 9d 06 0a 0e 38 41 0e   |8..G.........8A.|
0x3b00:   30 41 0e 28 42 0e 20 42  0e 18 42 0e 10 42 0e 08   |0A.(B. B..B..B..|
0x3b10:   41 0b 03 0c 01 0e b8 c1  02 49 0e c0 c1 02 44 0e   |A........I....D.|
0x3b20:   c8 c1 02 44 0e d0 c1 02  02 47 0e b0 c1 02 00 00   |...D.....G......|
0x3b30:   18 00 00 00 44 04 00 00  69 ec ff ff 2b 00 00 00   |....D...i...+...|
0x3b40:   00 45 0e 10 83 02 63 0e  08 41 c3 00 30 00 00 00   |.E....c..A..0...|
0x3b50:   60 04 00 00 78 ec ff ff  09 02 00 00 00 42 0e 10   |`...x........B..|
0x3b60:   8c 02 41 0e 18 86 03 41  0e 20 83 04 44 0e 40 02   |..A....A. ..D.@.|
0x3b70:   fa 0a 0e 20 41 0e 18 41  0e 10 42 0e 08 41 0b 00   |... A..A..B..A..|
0x3b80:   28 00 00 00 94 04 00 00  4d ee ff ff e2 00 00 00   |(.......M.......|
0x3b90:   00 41 0e 10 86 02 41 0e  18 83 03 44 0e 40 02 b1   |.A....A....D.@..|
0x3ba0:   0a 0e 18 41 0e 10 41 0e  08 41 0b 00 28 00 00 00   |...A..A..A..(...|
0x3bb0:   c0 04 00 00 03 ef ff ff  73 00 00 00 00 41 0e 10   |........s....A..|
0x3bc0:   83 02 5d 0a 0e 08 41 0b  68 0e 18 41 0e 20 69 0e   |..]...A.h..A. i.|
0x3bd0:   10 00 00 00 00 00 00 00  44 00 00 00 ec 04 00 00   |........D.......|
0x3be0:   50 ef ff ff 65 00 00 00  00 46 0e 10 8f 02 49 0e   |P...e....F....I.|
0x3bf0:   18 8e 03 45 0e 20 8d 04  45 0e 28 8c 05 44 0e 30   |...E. ..E.(..D.0|
0x3c00:   86 06 48 0e 38 83 07 47  0e 40 6e 0e 38 41 0e 30   |..H.8..G.@n.8A.0|
0x3c10:   41 0e 28 42 0e 20 42 0e  18 42 0e 10 42 0e 08 00   |A.(B. B..B..B...|
0x3c20:   10 00 00 00 34 05 00 00  78 ef ff ff 05 00 00 00   |....4...x.......|
0x3c30:   00 00 00 00 00 00 00 00  ??                        |........?       |
; section: .init_array
0x4cf8:   d0 12 00 00 00 00 00 00  90                        |.........       |
; section: .fini_array
0x4d00:   90 12 00 00 00 00 00 00  01                        |.........       |
; section: .dynamic
0x4d08:   01 00 00 00 00 00 00 00  01 00 00 00 00 00 00 00   |................|
0x4d18:   0c 00 00 00 00 00 00 00  00 10 00 00 00 00 00 00   |................|
0x4d28:   0d 00 00 00 00 00 00 00  a8 2b 00 00 00 00 00 00   |.........+......|
0x4d38:   19 00 00 00 00 00 00 00  f8 4c 00 00 00 00 00 00   |.........L......|
0x4d48:   1b 00 00 00 00 00 00 00  08 00 00 00 00 00 00 00   |................|
0x4d58:   1a 00 00 00 00 00 00 00  00 4d 00 00 00 00 00 00   |.........M......|
0x4d68:   1c 00 00 00 00 00 00 00  08 00 00 00 00 00 00 00   |................|
0x4d78:   f5 fe ff 6f 00 00 00 00  08 03 00 00 00 00 00 00   |...o............|
0x4d88:   05 00 00 00 00 00 00 00  70 06 00 00 00 00 00 00   |........p.......|
0x4d98:   06 00 00 00 00 00 00 00  40 03 00 00 00 00 00 00   |........@.......|
0x4da8:   0a 00 00 00 00 00 00 00  a5 01 00 00 00 00 00 00   |................|
0x4db8:   0b 00 00 00 00 00 00 00  18 00 00 00 00 00 00 00   |................|
0x4dc8:   15 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x4dd8:   03 00 00 00 00 00 00 00  f8 4e 00 00 00 00 00 00   |.........N......|
0x4de8:   02 00 00 00 00 00 00 00  58 02 00 00 00 00 00 00   |........X.......|
0x4df8:   14 00 00 00 00 00 00 00  07 00 00 00 00 00 00 00   |................|
0x4e08:   17 00 00 00 00 00 00 00  f0 0b 00 00 00 00 00 00   |................|
0x4e18:   07 00 00 00 00 00 00 00  c0 08 00 00 00 00 00 00   |................|
0x4e28:   08 00 00 00 00 00 00 00  30 03 00 00 00 00 00 00   |........0.......|
0x4e38:   09 00 00 00 00 00 00 00  18 00 00 00 00 00 00 00   |................|
0x4e48:   1e 00 00 00 00 00 00 00  08 00 00 00 00 00 00 00   |................|
0x4e58:   fb ff ff 6f 00 00 00 00  01 00 00 08 00 00 00 00   |...o............|
0x4e68:   fe ff ff 6f 00 00 00 00  60 08 00 00 00 00 00 00   |...o....`.......|
0x4e78:   ff ff ff 6f 00 00 00 00  01 00 00 00 00 00 00 00   |...o............|
0x4e88:   f0 ff ff 6f 00 00 00 00  16 08 00 00 00 00 00 00   |...o............|
0x4e98:   f9 ff ff 6f 00 00 00 00  1a 00 00 00 00 00 00 00   |...o............|
0x4ea8:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x4eb8:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x4ec8:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x4ed8:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x4ee8:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x4ef8:   08                                                 |.               |
; section: .got
0x4ef8:   08 4d 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |.M..............|
0x4f08:   00 00 00 00 00 00 00 00  36 10 00 00 00 00 00 00   |........6.......|
0x4f18:   46 10 00 00 00 00 00 00  56 10 00 00 00 00 00 00   |F.......V.......|
0x4f28:   66 10 00 00 00 00 00 00  76 10 00 00 00 00 00 00   |f.......v.......|
0x4f38:   86 10 00 00 00 00 00 00  96 10 00 00 00 00 00 00   |................|
0x4f48:   a6 10 00 00 00 00 00 00  b6 10 00 00 00 00 00 00   |................|
0x4f58:   c6 10 00 00 00 00 00 00  d6 10 00 00 00 00 00 00   |................|
0x4f68:   e6 10 00 00 00 00 00 00  f6 10 00 00 00 00 00 00   |................|
0x4f78:   06 11 00 00 00 00 00 00  16 11 00 00 00 00 00 00   |................|
0x4f88:   26 11 00 00 00 00 00 00  36 11 00 00 00 00 00 00   |&.......6.......|
0x4f98:   46 11 00 00 00 00 00 00  56 11 00 00 00 00 00 00   |F.......V.......|
0x4fa8:   66 11 00 00 00 00 00 00  76 11 00 00 00 00 00 00   |f.......v.......|
0x4fb8:   86 11 00 00 00 00 00 00  96 11 00 00 00 00 00 00   |................|
0x4fc8:   a6 11 00 00 00 00 00 00  b6 11 00 00 00 00 00 00   |................|
0x4fd8:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x4fe8:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x4ff8:   00 00 00 00 00 00 00 00  00                        |.........       |
; section: .data
0x5000:   00 00 00 00 00 00 00 00  08 50 00 00 00 00 00 00   |.........P......|
0x5010:   28 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |(...............|
0x5020:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x5030:   01 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x5040:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x5050:   63 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |c...............|
0x5060:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x5070:   23 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |#...............|
0x5080:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x5090:   07 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x50a0:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x50b0:   14 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x50c0:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x50d0:   2f 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |/...............|
0x50e0:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x50f0:   e9 03 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x5100:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x5110:   65 03 00 00 06 00 00 00  00 00 00 00 00 00 00 00   |e...............|
0x5120:   55 47 58 77 58 4f 64 6e  30 38 44 54 61 4c 57 4b   |UGXwXOdn08DTaLWK|   "UGXwXOdn08DTaLWKk86Y"
0x5130:   6b 38 36 59 00                                     |k86Y.           |
0x5135:   00 00 00                                           |...             |
0x5138:   31 30 37 37 33 35 33 30  00                        |10773530.       |   "10773530"
0x5141:   00 00 00 0d 00 00 00 00  00 00 00 00 00 00 00 24   |...............$|
0x5151:   00 00 00 00 00 00 00 70  51 00 00 00 00 00 00 90   |.......pQ.......|
0x5161:   51 00 00 00 00 00 00 00  00 00 00 00 00 00 00 08   |Q...............|
0x5171:   00 00 00 00 00 00 00 f0  51 00 00 00 00 00 00 b0   |........Q.......|
0x5181:   51 00 00 00 00 00 00 00  00 00 00 00 00 00 00 32   |Q..............2|
0x5191:   00 00 00 00 00 00 00 d0  51 00 00 00 00 00 00 10   |........Q.......|
0x51a1:   52 00 00 00 00 00 00 00  00 00 00 00 00 00 00 16   |R...............|
0x51b1:   00 00 00 00 00 00 00 b0  50 00 00 00 00 00 00 70   |........P......p|
0x51c1:   50 00 00 00 00 00 00 00  00 00 00 00 00 00 00 2d   |P..............-|
0x51d1:   00 00 00 00 00 00 00 10  50 00 00 00 00 00 00 d0   |........P.......|
0x51e1:   50 00 00 00 00 00 00 00  00 00 00 00 00 00 00 06   |P...............|
0x51f1:   00 00 00 00 00 00 00 30  50 00 00 00 00 00 00 90   |.......0P.......|
0x5201:   50 00 00 00 00 00 00 00  00 00 00 00 00 00 00 6b   |P..............k|
0x5211:   00 00 00 00 00 00 00 50  50 00 00 00 00 00 00 f0   |.......PP.......|
0x5221:   50 00 00 00 00 00 00 00  00 00 00 00 00 00 00 18   |P...............|
0x5231:   01 00 00 01 00 00 00 40  52 00 00 00 00 00 00 71   |.......@R......q|
0x5241:   02 00 00 02 00 00 00 50  52 00 00 00 00 00 00 63   |.......PR......c|
0x5251:   01 00 00 03 00 00 00 60  52 00 00 00 00 00 00 1d   |.......`R.......|
0x5261:   01 00 00 04 00 00 00 70  52 00 00 00 00 00 00 f8   |.......pR.......|
0x5271:   01 00 00 05 00 00 00 10  51 00 00 00 00 00 00 57   |........Q......W|
0x5281:   34 00 00 00 00 00 00 5f  34 00 00 00 00 00 00 69   |4......_4......i|
0x5291:   34 00 00 00 00 00 00 71  34 00 00 00 00 00 00 00   |4......q4.......|
0x52a1:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x52b1:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x52c1:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x52d1:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x52e1:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x52f1:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x5301:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x5311:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x5321:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x5331:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x5341:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x5351:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x5361:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x5371:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x5381:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x5391:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x53a1:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x53b1:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x53c1:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x53d1:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x53e1:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x53f1:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x5401:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x5411:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x5421:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x5431:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x5441:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x5451:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x5461:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x5471:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x5481:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x5491:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x54a1:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x54b1:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x54c1:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x54d1:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x54e1:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x54f1:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x5501:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x5511:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x5521:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x5531:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x5541:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x5551:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x5561:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x5571:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x5581:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x5591:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x55a1:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x55b1:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x55c1:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x55d1:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x55e1:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x55f1:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x5601:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x5611:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x5621:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x5631:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x5641:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x5651:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x5661:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x5671:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
